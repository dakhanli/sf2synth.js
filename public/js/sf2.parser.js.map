{"version":3,"file":"sf2.parser.js","sources":["../../src/parser/Stream.ts","../../src/parser/RiffParser.ts","../../src/parser/Constants.ts","../../src/parser/Structs.ts","../../src/parser/Parser.ts","../../src/parser/SoundFont.ts"],"sourcesContent":["export default class Stream {\n  private data: Uint8Array\n  ip: number\n\n  constructor(data, offset) {\n    this.data = data\n    this.ip = offset\n  }\n\n  readString(size: number): string {\n    const str = String.fromCharCode.apply(null, this.data.subarray(this.ip, this.ip += size))\n    const nullLocation = str.indexOf(\"\\u0000\")\n    if (nullLocation > 0) {\n      return str.substr(0, nullLocation)\n    }\n    return str\n  }\n\n  readWORD(): number {\n    return this.data[this.ip++] | (this.data[this.ip++] << 8)\n  }\n\n  readDWORD(bigEndian: boolean = false): number {\n    if (bigEndian) {\n      return (\n        (this.data[this.ip++] << 24)| \n        (this.data[this.ip++] << 16) | \n        (this.data[this.ip++] << 8) | \n        (this.data[this.ip++])\n      ) >>> 0\n    } else {\n      return (\n        this.data[this.ip++] | \n        (this.data[this.ip++] << 8) | \n        (this.data[this.ip++] << 16) | \n        (this.data[this.ip++] << 24)\n      ) >>> 0\n    }\n  }\n\n  readByte() {\n    return this.data[this.ip++]\n  }\n\n  readAt(offset: number) {\n    return this.data[this.ip + offset]\n  }\n\n  /* helper */\n\n  readUInt8() {\n    return this.readByte()\n  }\n  \n  readInt8() {\n    return (this.readByte() << 24) >> 24\n  }\n  \n  readUInt16() {\n    return this.readWORD()\n  }\n\n  readInt16() {\n    return (this.readWORD() << 16) >> 16\n  }\n\n  readUInt32() {\n    return this.readDWORD()\n  }\n}\n","import Stream from \"./Stream\"\n\nfunction parseChunk(input: Uint8Array, ip: number, bigEndian: boolean): Chunk {\n  const stream = new Stream(input, ip)\n  const type = stream.readString(4)\n  const size = stream.readDWORD(bigEndian)\n  return new Chunk(type, size, stream.ip)\n}\n\nexport interface Options {\n  padding?: boolean,\n  bigEndian?: boolean\n}\n\nexport function parseRiff(input: Uint8Array, index: number = 0, length: number, { padding = true, bigEndian = false }: Options = {}) {\n  const chunkList: Chunk[] = []\n  const end = length + index\n  let ip = index\n\n  while (ip < end) {\n    const chunk = parseChunk(input, ip, bigEndian)\n    ip = chunk.offset + chunk.size\n    \n    // padding\n    if (padding && ((ip - index) & 1) === 1) {\n      ip++\n    }\n    \n    chunkList.push(chunk)\n  }\n\n  return chunkList\n}\n\nexport class Chunk {\n  type: string\n  size: number\n  offset: number\n\n  constructor(type: string, size: number, offset: number) {\n    this.type = type\n    this.size = size\n    this.offset = offset\n  }\n}\n","export const GeneratorEnumeratorTable = [\n  'startAddrsOffset',\n  'endAddrsOffset',\n  'startloopAddrsOffset',\n  'endloopAddrsOffset',\n  'startAddrsCoarseOffset',\n  'modLfoToPitch',\n  'vibLfoToPitch',\n  'modEnvToPitch',\n  'initialFilterFc',\n  'initialFilterQ',\n  'modLfoToFilterFc',\n  'modEnvToFilterFc',\n  'endAddrsCoarseOffset',\n  'modLfoToVolume',\n  undefined, // 14\n  'chorusEffectsSend',\n  'reverbEffectsSend',\n  'pan',\n  undefined,undefined,undefined, // 18,19,20\n  'delayModLFO',\n  'freqModLFO',\n  'delayVibLFO',\n  'freqVibLFO',\n  'delayModEnv',\n  'attackModEnv',\n  'holdModEnv',\n  'decayModEnv',\n  'sustainModEnv',\n  'releaseModEnv',\n  'keynumToModEnvHold',\n  'keynumToModEnvDecay',\n  'delayVolEnv',\n  'attackVolEnv',\n  'holdVolEnv',\n  'decayVolEnv',\n  'sustainVolEnv',\n  'releaseVolEnv',\n  'keynumToVolEnvHold',\n  'keynumToVolEnvDecay',\n  'instrument',\n  undefined, // 42\n  'keyRange',\n  'velRange',\n  'startloopAddrsCoarseOffset',\n  'keynum',\n  'velocity',\n  'initialAttenuation',\n  undefined, // 49\n  'endloopAddrsCoarseOffset',\n  'coarseTune',\n  'fineTune',\n  'sampleID',\n  'sampleModes',\n  undefined, // 55\n  'scaleTuning',\n  'exclusiveClass',\n  'overridingRootKey'\n]\n","import { GeneratorEnumeratorTable } from \"./Constants\"\nimport Stream from \"./Stream\"\nimport { Chunk } from \"./RiffParser\"\n\nexport class VersionTag {\n  major: number\n  minor: number\n  \n  static parse(stream: Stream) {\n    const v = new VersionTag()\n    v.major = stream.readInt8()\n    v.minor = stream.readInt8()\n    return v\n  }\n}\n\nexport class Info {\n  comment: string|null\n  copyright: string|null\n  creationDate: string|null\n  engineer: string|null\n  name: string\n  product: string|null\n  software: string|null\n  version: VersionTag\n  soundEngine: string|null\n  romName: string|null\n  romVersion: VersionTag|null\n\n  // LIST - INFO の全ての chunk\n  static parse(data: Uint8Array, chunks: Chunk[]) {\n    function getChunk(type) {\n      return chunks.find(c => c.type === type) \n    }\n\n    function toStream(chunk) {\n      return new Stream(data, chunk.offset)\n    }\n\n    function readString(type) {\n      const chunk = getChunk(type)\n      if (!chunk) {\n        return null\n      }\n      return toStream(chunk)!.readString(chunk.size)\n    }\n\n    function readVersionTag(type) {\n      const chunk = getChunk(type)\n      if (!chunk) {\n        return null\n      }\n      return VersionTag.parse(toStream(chunk))\n    }\n    \n    const info = new Info()\n    info.comment = readString(\"ICMT\")\n    info.copyright = readString(\"ICOP\")\n    info.creationDate = readString(\"ICRD\")\n    info.engineer = readString(\"IENG\")\n    info.name = readString(\"INAM\")!\n    info.product = readString(\"IPRD\")\n    info.software = readString(\"ISFT\")\n    info.version = readVersionTag(\"ifil\")!\n    info.soundEngine = readString(\"isng\")\n    info.romName = readString(\"irom\")\n    info.romVersion = readVersionTag(\"iver\")\n    return info\n  }\n}\n\nexport class PresetHeader {\n  presetName: string\n  preset: number\n  bank: number\n  presetBagIndex: number\n  library: number\n  genre: number\n  morphology: number\n\n  get isEnd() {\n    return this.presetName === \"EOP\"\n  }\n\n  static parse(stream: Stream) {\n    const p = new PresetHeader()\n    p.presetName = stream.readString(20)\n    p.preset = stream.readWORD()\n    p.bank = stream.readWORD()\n    p.presetBagIndex = stream.readWORD()\n    p.library = stream.readDWORD()\n    p.genre = stream.readDWORD()\n    p.morphology = stream.readDWORD()\n    return p\n  }\n}\n\nexport class PresetBag {\n  presetGeneratorIndex: number\n  presetModulatorIndex: number\n\n  static parse(stream: Stream) {\n    const p = new PresetBag()\n    p.presetGeneratorIndex = stream.readWORD()\n    p.presetModulatorIndex = stream.readWORD()\n    return p\n  }\n}\n\nexport class RangeValue {\n  lo: number\n  hi: number\n\n  constructor(lo: number, hi: number) {\n    this.lo = lo\n    this.hi = hi\n  }\n\n  static parse(stream: Stream) {\n    return new RangeValue(\n      stream.readByte(), \n      stream.readByte()\n    )\n  }\n}\n\nexport class ModulatorList {\n  sourceOper: number\n  destinationOper: number\n  value: number|RangeValue\n  amountSourceOper: number\n  transOper: number\n\n  get type() {\n    return GeneratorEnumeratorTable[this.destinationOper]\n  }\n\n  get isEnd() {\n    return this.sourceOper === 0 && \n      this.destinationOper === 0 &&\n      this.value === 0 &&\n      this.amountSourceOper === 0 &&\n      this. transOper === 0\n  }\n\n  static parse(stream: Stream) {\n    const t = new ModulatorList()\n\n    t.sourceOper = stream.readWORD()\n    t.destinationOper = stream.readWORD()\n\n    switch (t.type) {\n      case 'keyRange': /* FALLTHROUGH */\n      case 'velRange': /* FALLTHROUGH */\n      case 'keynum': /* FALLTHROUGH */\n      case 'velocity':\n        t.value = RangeValue.parse(stream)\n        break\n      default:\n        t.value = stream.readInt16()\n        break\n    }\n    \n    t.amountSourceOper = stream.readWORD()\n    t.transOper = stream.readWORD()\n\n    return t\n  }\n}\n\nexport class GeneratorList {\n  code: number\n  value: number|RangeValue\n\n  get type() {\n    return GeneratorEnumeratorTable[this.code]\n  }\n\n  get isEnd() {\n    return this.code === 0 &&\n      this.value === 0\n  }\n\n  static parse(stream: Stream) {\n    const t = new GeneratorList()\n    t.code = stream.readWORD()\n\n    switch (t.type) {\n      case 'keynum': /* FALLTHROUGH */\n      case 'keyRange': /* FALLTHROUGH */\n      case 'velRange': /* FALLTHROUGH */\n      case 'velocity':\n        t.value = RangeValue.parse(stream)\n        break\n      default:\n        t.value = stream.readInt16()\n        break\n    }\n\n    return t\n  }\n}\n\nexport class Instrument {\n  instrumentName: string\n  instrumentBagIndex: number\n\n  get isEnd() {\n    return this.instrumentName === \"EOI\"\n  }\n  \n  static parse(stream: Stream) {\n    const t = new Instrument()\n    t.instrumentName = stream.readString(20)\n    t.instrumentBagIndex = stream.readWORD()\n    return t\n  }\n}\n\nexport class InstrumentBag {\n  instrumentGeneratorIndex: number\n  instrumentModulatorIndex: number\n  \n  static parse(stream: Stream) {\n    const t = new InstrumentBag()\n    t.instrumentGeneratorIndex = stream.readWORD()\n    t.instrumentModulatorIndex = stream.readWORD()\n    return t\n  }\n}\n\nexport class SampleHeader {\n  sampleName: string\n  start: number\n  end: number\n  loopStart: number\n  loopEnd: number\n  sampleRate: number\n  originalPitch: number\n  pitchCorrection: number\n  sampleLink: number\n  sampleType: number\n\n  get isEnd() {\n    return this.sampleName === \"EOS\"\n  }\n\n  static parse(stream: Stream) {\n    const s = new SampleHeader()\n\n    s.sampleName = stream.readString(20)\n    s.start = stream.readDWORD()\n    s.end = stream.readDWORD()\n    s.loopStart = stream.readDWORD()\n    s.loopEnd = stream.readDWORD()\n    s.sampleRate = stream.readDWORD()\n    s.originalPitch = stream.readByte()\n    s.pitchCorrection = stream.readInt8()\n    s.sampleLink = stream.readWORD()\n    s.sampleType = stream.readWORD()\n\n    s.loopStart -= s.start\n    s.loopEnd -= s.start\n\n    return s\n  }\n}\n\nexport const SampleLink = {\n  monoSample: 1,\n  rightSample: 2,\n  leftSample: 4,\n  linkedSample: 8,\n  RomMonoSample: 0x8001,\n  RomRightSample: 0x8002,\n  RomLeftSample: 0x8004,\n  RomLinkedSample: 0x8008\n}\n","import { parseRiff, Chunk, Options as RiffParserOptions } from \"./RiffParser\"\nimport { PresetHeader, SampleHeader, PresetBag, Instrument, InstrumentBag, ModulatorList, GeneratorList, Info } from \"./Structs\"\nimport Stream from \"./Stream\"\n\nexport interface ParseResult {\n  presetHeaders: PresetHeader[]\n  presetZone: PresetBag[]\n  presetModulators: ModulatorList[]\n  presetGenerators: GeneratorList[]\n  instruments: Instrument[]\n  instrumentZone: InstrumentBag[]\n  instrumentModulators: ModulatorList[]\n  instrumentGenerators: GeneratorList[]\n  sampleHeaders: SampleHeader[]\n  samples: Int16Array[]\n  samplingData: Chunk\n  info: Info\n}\n\nexport default function parse(input: Uint8Array, option: RiffParserOptions = {}): ParseResult {\n\n  // parse RIFF chunk\n  const chunkList = parseRiff(input, 0, input.length, option)\n\n  if (chunkList.length !== 1) {\n    throw new Error('wrong chunk length')\n  }\n\n  const chunk = chunkList[0]\n  if (chunk === null) {\n    throw new Error('chunk not found')\n  }\n\n  function parseRiffChunk(chunk: Chunk, data: Uint8Array) {\n    const chunkList = getChunkList(chunk, data, \"RIFF\", \"sfbk\")\n\n    if (chunkList.length !== 3) {\n      throw new Error('invalid sfbk structure')\n    }\n\n    return {\n      // INFO-list\n      info: parseInfoList(chunkList[0], data),\n\n      // sdta-list\n      samplingData: parseSdtaList(chunkList[1], data),\n\n      // pdta-list\n      ...parsePdtaList(chunkList[2], data)\n    }\n  }\n\n  function parsePdtaList(chunk: Chunk, data: Uint8Array) {\n    const chunkList = getChunkList(chunk, data, \"LIST\", \"pdta\")\n\n    // check number of chunks\n    if (chunkList.length !== 9) {\n      throw new Error('invalid pdta chunk')\n    }\n\n    return {\n      presetHeaders: parsePhdr(chunkList[0], data),\n      presetZone: parsePbag(chunkList[1], data),\n      presetModulators: parsePmod(chunkList[2], data),\n      presetGenerators: parsePgen(chunkList[3], data),\n      instruments: parseInst(chunkList[4], data),\n      instrumentZone: parseIbag(chunkList[5], data),\n      instrumentModulators: parseImod(chunkList[6], data),\n      instrumentGenerators: parseIgen(chunkList[7], data),\n      sampleHeaders: parseShdr(chunkList[8], data)\n    }\n  }\n\n  const result = parseRiffChunk(chunk, input)\n\n  return {\n    ...result,\n    samples: loadSample(result.sampleHeaders, result.samplingData.offset, input)\n  }\n}\n\nfunction getChunkList(chunk, data, expectedType, expectedSignature) {\n  // check parse target\n  if (chunk.type !== expectedType) {\n    throw new Error('invalid chunk type:' + chunk.type)\n  }\n\n  const stream = new Stream(data, chunk.offset)\n\n  // check signature\n  const signature = stream.readString(4)\n  if (signature !== expectedSignature) {\n    throw new Error('invalid signature:' + signature)\n  }\n\n  // read structure\n  return parseRiff(data, stream.ip, chunk.size - 4)\n}\n\nfunction parseInfoList(chunk: Chunk, data: Uint8Array) {\n  const chunkList = getChunkList(chunk, data, \"LIST\", \"INFO\")\n  return Info.parse(data, chunkList)\n}\n\nfunction parseSdtaList(chunk: Chunk, data: Uint8Array): Chunk {\n  const chunkList = getChunkList(chunk, data, \"LIST\", \"sdta\")\n\n  if (chunkList.length !== 1) {\n    throw new Error('TODO')\n  }\n\n  return chunkList[0]\n}\n\nfunction parseChunk<T>(chunk: Chunk, data: Uint8Array, type: string, clazz: { parse: (stream: Stream) => T }, terminate?: (obj: T) => boolean): T[] {\n  const result: T[] = []\n\n  if (chunk.type !== type) {\n    throw new Error('invalid chunk type:'  + chunk.type)\n  }\n  \n  const stream = new Stream(data, chunk.offset)\n  const size = chunk.offset + chunk.size\n  \n  while (stream.ip < size) {\n    const obj = clazz.parse(stream)\n    if (terminate && terminate(obj)) {\n      break\n    }\n    result.push(obj)\n  }\n\n  return result\n}\n\nconst parsePhdr = (chunk, data) => parseChunk(chunk, data, \"phdr\", PresetHeader, p => p.isEnd)\nconst parsePbag = (chunk, data) => parseChunk(chunk, data, \"pbag\", PresetBag)\nconst parseInst = (chunk, data) => parseChunk(chunk, data, \"inst\", Instrument, i => i.isEnd)\nconst parseIbag = (chunk, data) => parseChunk(chunk, data, \"ibag\", InstrumentBag)\nconst parsePmod = (chunk, data) => parseChunk(chunk, data, \"pmod\", ModulatorList, m => m.isEnd)\nconst parseImod = (chunk, data) => parseChunk(chunk, data, \"imod\", ModulatorList, m => m.isEnd)\nconst parsePgen = (chunk, data) => parseChunk(chunk, data, \"pgen\", GeneratorList, g => g.isEnd)\nconst parseIgen = (chunk, data) => parseChunk(chunk, data, \"igen\", GeneratorList)\nconst parseShdr = (chunk, data) => parseChunk(chunk, data, \"shdr\", SampleHeader, s => s.isEnd)\n\nfunction adjustSampleData(sample, sampleRate) {\n  let multiply = 1\n\n  // buffer\n  while (sampleRate < 22050) {\n    const newSample = new Int16Array(sample.length * 2)\n    for (let i = 0, j = 0, il = sample.length; i < il; ++i) {\n      newSample[j++] = sample[i]\n      newSample[j++] = sample[i]\n    }\n    sample = newSample\n    multiply *= 2\n    sampleRate *= 2\n  }\n\n  return {\n    sample,\n    multiply\n  }\n}\n\nfunction loadSample(sampleHeader: SampleHeader[], samplingDataOffset: number, data: Uint8Array): Int16Array[] {\n  return sampleHeader.map(header => {\n    let sample = new Int16Array(new Uint8Array(data.subarray(\n      samplingDataOffset + header.start * 2,\n      samplingDataOffset + header.end   * 2\n    )).buffer)\n    if (header.sampleRate > 0) {\n      const adjust = adjustSampleData(sample, header.sampleRate)\n      sample = adjust.sample\n      header.sampleRate *= adjust.multiply\n      header.loopStart *= adjust.multiply\n      header.loopEnd *= adjust.multiply\n    }\n    return sample\n  })\n}","import { ParseResult } from \"./Parser\"\nimport { RangeValue, GeneratorList } from \"./Structs\"\n\n/**\n * Parser で読み込んだサウンドフォントのデータを\n * Synthesizer から利用しやすい形にするクラス\n */\nexport default class SoundFont {\n  private parsed: ParseResult\n\n  constructor(parsed: ParseResult) {\n    this.parsed = parsed\n  }\n\n  getPresetZone(presetHeaderIndex: number) {\n    let presetGenerators: GeneratorList[]\n    const presetHeader = this.parsed.presetHeaders[presetHeaderIndex]\n    const presetBag = this.parsed.presetZone[presetHeader.presetBagIndex]\n\n    const nextPresetHeaderIndex = presetHeaderIndex + 1\n    if (nextPresetHeaderIndex < this.parsed.presetHeaders.length) {\n      // 次の preset までのすべての generator を取得する\n      const nextPresetHeader = this.parsed.presetHeaders[nextPresetHeaderIndex]\n      const nextPresetBag = this.parsed.presetZone[nextPresetHeader.presetBagIndex]\n      presetGenerators = this.parsed.presetGenerators.slice(presetBag.presetGeneratorIndex, nextPresetBag.presetGeneratorIndex)\n    } else {\n      // 最後の preset だった場合は最後まで取得する\n      presetGenerators = this.parsed.presetGenerators.slice(presetBag.presetGeneratorIndex, this.parsed.presetGenerators.length)\n    }\n\n    return presetGenerators\n  }\n\n  getInstrumentZone(instrumentZoneIndex: number) {\n    const instrumentBag = this.parsed.instrumentZone[instrumentZoneIndex]\n    const nextInstrumentBag = this.parsed.instrumentZone[instrumentZoneIndex + 1]\n    const generatorIndex = instrumentBag.instrumentGeneratorIndex\n    const nextGeneratorIndex = nextInstrumentBag ? nextInstrumentBag.instrumentGeneratorIndex : this.parsed.instrumentGenerators.length\n    const generators = this.parsed.instrumentGenerators.slice(generatorIndex, nextGeneratorIndex)\n    return createInstrumentZone(generators)\n  }\n\n  getInstrumentZoneIndexes(instrumentID: number): number[] {\n    const instrument = this.parsed.instruments[instrumentID]\n    const nextInstrument = this.parsed.instruments[instrumentID + 1]\n    return arrayRange(instrument.instrumentBagIndex, nextInstrument ? nextInstrument.instrumentBagIndex : this.parsed.instrumentZone.length)\n  }\n\n  getInstrumentKey(bankNumber, instrumentNumber, key, velocity = 100): NoteInfo | null {\n    const presetHeaderIndex = this.parsed.presetHeaders.findIndex(p => p.preset === instrumentNumber && p.bank === bankNumber)\n\n    if (presetHeaderIndex < 0) {\n      console.warn(\"preset not found: bank=%s instrument=%s\", bankNumber, instrumentNumber)\n      return null\n    }\n\n    const presetGenerators = this.getPresetZone(presetHeaderIndex)\n\n    // Last Preset Generator must be instrument\n    const lastPresetGenertor = presetGenerators[presetGenerators.length - 1]\n    if (lastPresetGenertor.type !== \"instrument\" || isNaN(Number(lastPresetGenertor.value))) {\n      throw new Error(\"Invalid SoundFont: invalid preset generator: expect instrument\")\n    }\n    const instrumentID = lastPresetGenertor.value as number\n    const instrumentZones = this.getInstrumentZoneIndexes(instrumentID).map(i => this.getInstrumentZone(i))\n\n    // 最初のゾーンがsampleID を持たなければ global instrument zone\n    let globalInstrumentZone: any | undefined\n    const firstInstrumentZone = instrumentZones[0]\n    if (firstInstrumentZone.sampleID === undefined) {\n      globalInstrumentZone = instrumentZones[0]\n    }\n\n    // keyRange と velRange がマッチしている Generator を探す\n    const instrumentZone = instrumentZones.find(i => {\n      if (i === globalInstrumentZone) {\n        return false // global zone を除外\n      }\n\n      let isInKeyRange = false\n      if (i.keyRange) {\n        isInKeyRange = key >= i.keyRange.lo && key <= i.keyRange.hi\n      }\n\n      let isInVelRange = true\n      if (i.velRange) {\n        isInVelRange = velocity >= i.velRange.lo && velocity <= i.velRange.hi\n      }\n\n      return isInKeyRange && isInVelRange\n    })\n\n    if (!instrumentZone) {\n      console.warn(\"instrument not found: bank=%s instrument=%s\", bankNumber, instrumentNumber)\n      return null\n    }\n\n    if (instrumentZone.sampleID === undefined) {\n      throw new Error(\"Invalid SoundFont: sampleID not found\")\n    }\n\n    const gen = { ...defaultInstrumentZone, ...removeUndefined(globalInstrumentZone || {}), ...removeUndefined(instrumentZone) }\n\n    const sample = this.parsed.samples[gen.sampleID!]\n    const sampleHeader = this.parsed.sampleHeaders[gen.sampleID!]\n    const tune = gen.coarseTune + gen.fineTune / 100\n    const basePitch = tune + (sampleHeader.pitchCorrection / 100) - (gen.overridingRootKey || sampleHeader.originalPitch)\n    const scaleTuning = gen.scaleTuning / 100\n\n    return {\n      sample,\n      sampleRate: sampleHeader.sampleRate,\n      sampleName: sampleHeader.sampleName,\n      sampleModes: gen.sampleModes,\n      playbackRate: (key) => Math.pow(Math.pow(2, 1 / 12), (key + basePitch) * scaleTuning),\n      modEnvToPitch: gen.modEnvToPitch / 100, // cent\n      scaleTuning,\n      start: gen.startAddrsCoarseOffset * 32768 + gen.startAddrsOffset,\n      end: gen.endAddrsCoarseOffset * 32768 + gen.endAddrsOffset,\n      loopStart: (\n        sampleHeader.loopStart +\n        gen.startloopAddrsCoarseOffset * 32768 +\n        gen.startloopAddrsOffset\n      ),\n      loopEnd: (\n        sampleHeader.loopEnd +\n        gen.endloopAddrsCoarseOffset * 32768 +\n        gen.endloopAddrsOffset\n      ),\n      volDelay: convertTime(gen.volDelay),\n      volAttack: convertTime(gen.volAttack),\n      volHold: convertTime(gen.volHold),\n      volDecay: convertTime(gen.volDecay),\n      volSustain: gen.volSustain / 1000,\n      volRelease: convertTime(gen.volRelease),\n      modDelay: convertTime(gen.modDelay),\n      modAttack: convertTime(gen.modAttack),\n      modHold: convertTime(gen.modHold),\n      modDecay: convertTime(gen.modDecay),\n      modSustain: gen.modSustain / 1000,\n      modRelease: convertTime(gen.modRelease),\n      keyRange: gen.keyRange,\n      velRange: gen.velRange,\n      initialFilterFc: gen.initialFilterFc,\n      modEnvToFilterFc: gen.modEnvToFilterFc, // semitone (100 cent)\n      initialFilterQ: gen.initialFilterQ,\n      initialAttenuation: gen.initialAttenuation,\n      freqVibLFO: gen.freqVibLFO ? convertTime(gen.freqVibLFO) * 8.176 : undefined,\n      pan: gen.pan,\n      mute: false,\n      releaseTime: gen.releaseTime\n    }\n  }\n\n  // presetNames[bankNumber][presetNumber] = presetName\n  getPresetNames() {\n    const bank: { [index: number]: { [index: number]: string } } = {}\n    this.parsed.presetHeaders.forEach(preset => {\n      if (!bank[preset.bank]) {\n        bank[preset.bank] = {}\n      }\n      bank[preset.bank][preset.preset] = preset.presetName\n    })\n    return bank\n  }\n}\n\n// value = 1200log2(sec) で表される時間を秒単位に変換する\nexport function convertTime(value) {\n  return Math.pow(2, value / 1200)\n}\n\nfunction removeUndefined(obj) {\n  const result = {}\n  Object.keys(obj).forEach(key => {\n    if (obj[key] !== undefined) {\n      result[key] = obj[key]\n    }\n  })\n  return result\n}\n\nfunction arrayRange(start, end) {\n  return Array.from({ length: end - start }, (_, k) => k + start);\n}\n\n// ひとつの instrument に対応する Generator の配列から使いやすくしたオブジェクトを返す\nfunction createInstrumentZone(instrumentGenerators: GeneratorList[]) {\n  function getValue(type: string): number | undefined {\n    const generator = instrumentGenerators.find(g => g.type === type)\n    if (!generator) {\n      return undefined\n    }\n    if (isNaN(Number(generator.value))) {\n      throw new Error(\"something wrong\")\n    }\n    return generator.value as number\n  }\n\n  // First Instrument Generator must be keyRange\n  const firstInstrumentGenerator = instrumentGenerators[0]\n  let keyRange: RangeValue | undefined\n  if (firstInstrumentGenerator && firstInstrumentGenerator.type === \"keyRange\") {\n    if (!(firstInstrumentGenerator.value instanceof RangeValue)) {\n      throw new Error(\"Invalid SoundFont: keyRange is not ranged value\")\n    }\n    keyRange = firstInstrumentGenerator.value as RangeValue\n  }\n\n  // Second Instrument Generator could be velRange\n  const secondInstrumentGenerator = instrumentGenerators[1]\n  let velRange: RangeValue | undefined\n  if (secondInstrumentGenerator && secondInstrumentGenerator.type === \"velRange\") {\n    if (!(secondInstrumentGenerator.value instanceof RangeValue)) {\n      throw new Error(\"Invalid SoundFont: velRange is not ranged value\")\n    }\n    velRange = secondInstrumentGenerator.value as RangeValue\n  }\n\n  // Last Instrument Generator must be sampleID\n  const lastInstrumentGenerator = instrumentGenerators[instrumentGenerators.length - 1]\n  let sampleID: number | undefined\n  if (lastInstrumentGenerator && lastInstrumentGenerator.type === \"sampleID\") {\n    if (isNaN(Number(lastInstrumentGenerator.value))) {\n      throw new Error(\"Invalid SoundFont: sampleID is not number\")\n    }\n    sampleID = lastInstrumentGenerator.value as number\n  }\n  \n  return {\n    keyRange, // あるはずだが global zone には無いかもしれない\n    velRange, // optional\n    sampleID, // global zone の場合だけない\n    volAttack: getValue(\"attackVolEnv\"),\n    volDecay: getValue(\"decayVolEnv\"),\n    volDelay: getValue(\"delayVolEnv\"),\n    volSustain: getValue(\"sustainVolEnv\"),\n    volRelease: getValue(\"releaseVolEnv\"),\n    modAttack: getValue(\"attackModEnv\"),\n    modDecay: getValue(\"decayModEnv\"),\n    modDelay: getValue(\"delayModEnv\"),\n    modSustain: getValue(\"sustainModEnv\"),\n    modRelease: getValue(\"releaseModEnv\"),\n    modEnvToPitch: getValue(\"modEnvToPitch\"),\n    modEnvToFilterFc: getValue(\"modEnvToFilterFc\"),\n    coarseTune: getValue(\"coarseTune\"),\n    fineTune: getValue(\"fineTune\"),\n    scaleTuning: getValue(\"scaleTuning\"),\n    freqVibLFO: getValue(\"freqVibLFO\"),\n    startAddrsOffset: getValue(\"startAddrsOffset\"),\n    startAddrsCoarseOffset: getValue(\"startAddrsCoarseOffset\"),\n    endAddrsOffset: getValue(\"endAddrsOffset\"),\n    endAddrsCoarseOffset: getValue(\"endAddrsCoarseOffset\"),\n    startloopAddrsOffset: getValue(\"startloopAddrsOffset\"),\n    startloopAddrsCoarseOffset: getValue(\"startloopAddrsCoarseOffset\"),\n    endloopAddrsOffset: getValue(\"endloopAddrsOffset\"),\n    initialAttenuation: getValue(\"initialAttenuation\"),\n    endloopAddrsCoarseOffset: getValue(\"endloopAddrsCoarseOffset\"),\n    overridingRootKey: getValue(\"overridingRootKey\"),\n    initialFilterQ: getValue(\"initialFilterQ\"),\n    initialFilterFc: getValue(\"initialFilterFc\"),\n    sampleModes: getValue(\"sampleModes\"),\n    pan: getValue(\"pan\")\n  }\n}\n\nconst defaultInstrumentZone = {\n  keyRange: new RangeValue(0, 127),\n  velRange: new RangeValue(0, 127),\n  sampleID: undefined,\n  volDelay: -12000,\n  volAttack: -12000,\n  volDecay: -12000,\n  volHold: -12000,\n  volSustain: 0,\n  volRelease: -12000,\n  modDelay: -12000,\n  modAttack: -12000,\n  modHold: -12000,\n  modDecay: -12000,\n  modSustain: 0,\n  modRelease: -12000,\n  modEnvToPitch: 0,\n  modEnvToFilterFc: 0,\n  coarseTune: 0,\n  fineTune: 0,\n  scaleTuning: 100,\n  freqVibLFO: 0,\n  startAddrsOffset: 0,\n  startAddrsCoarseOffset: 0,\n  endAddrsOffset: 0,\n  endAddrsCoarseOffset: 0,\n  startloopAddrsOffset: 0,\n  startloopAddrsCoarseOffset: 0,\n  initialAttenuation: 0,\n  endloopAddrsOffset: 0,\n  endloopAddrsCoarseOffset: 0,\n  overridingRootKey: undefined,\n  initialFilterQ: 1,\n  initialFilterFc: 13500,\n  sampleModes: 0,\n  mute: false,\n  releaseTime: 64,\n  pan: undefined\n}\n\nexport interface NoteInfo {\n  sample: Int16Array\n  sampleRate: number\n  sampleName: string\n  sampleModes: number\n  playbackRate: Function\n  modEnvToPitch: number\n  scaleTuning: number\n  start: number\n  end: number\n  loopStart: number\n  loopEnd: number\n  volDelay: number\n  volAttack: number\n  volHold: number\n  volDecay: number\n  volSustain: number\n  volRelease: number\n  modDelay: number\n  modAttack: number\n  modHold: number\n  modDecay: number\n  modSustain: number\n  modRelease: number\n  initialFilterFc: number\n  modEnvToFilterFc: number\n  initialFilterQ: number\n  initialAttenuation: number\n  freqVibLFO: number | undefined\n  mute: boolean\n  releaseTime: number\n  pan: number | undefined\n  keyRange: RangeValue\n  velRange: RangeValue | undefined\n}\n"],"names":["parseChunk"],"mappings":"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"}