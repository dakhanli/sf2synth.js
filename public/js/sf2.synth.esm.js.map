{"version":3,"file":"sf2.synth.esm.js","sources":["../../src/synth/SynthesizerNote.ts","../../src/parser/Stream.ts","../../src/parser/RiffParser.ts","../../src/parser/Constants.ts","../../src/parser/Structs.ts","../../src/parser/Parser.ts","../../src/parser/SoundFont.ts","../../src/synth/Synthesizer.ts","../../src/synth/ProgramNames.ts","../../src/synth/View.ts","../../src/synth/MidiMessageHandler.ts","../../src/synth/delegateProxy.ts","../../src/synth/WebMidiLink.ts"],"sourcesContent":["//import { Instrument } from \"./Structs\";\nimport { NoteInfo } from \"../parser/SoundFont\"\n\nexport interface InstrumentState {\n  channel: number\n  key: number\n  volume: number\n  panpot: number\n  velocity: number\n  pitchBend: number\n  pitchBendSensitivity: number\n  expression: number\n  mute: boolean\n  releaseTime: number\n  cutOffFrequency: number\n  harmonicContent: number\n}\n\nexport default class SynthesizerNote {\n\n  //---------------------------------------------------------------------------\n  // audio node\n  //---------------------------------------------------------------------------\n\n  audioBuffer: AudioBuffer\n  bufferSource: AudioBufferSourceNode\n  panner: PannerNode\n  expressionGain: GainNode\n  gainOutput: GainNode\n  ctx: AudioContext\n  destination: AudioNode\n  filter: BiquadFilterNode\n  modulator: BiquadFilterNode\n  noteInfo: NoteInfo\n  instrument: InstrumentState\n  channel: number\n  key: number\n  velocity: number\n  playbackRate: number\n  volume: number\n  panpot: number\n  pitchBend: number\n  pitchBendSensitivity: number\n  modEnvToPitch: number\n  expression: number\n\n  // state\n  startTime: number\n  computedPlaybackRate: number\n  noteOffState: boolean\n  sampleModes: number\n\n  constructor(ctx: AudioContext, destination: AudioNode, noteInfo: NoteInfo, instrument: InstrumentState) {\n    this.ctx = ctx\n    this.destination = destination\n    this.noteInfo = noteInfo\n    this.playbackRate = noteInfo.playbackRate(instrument.key)\n    this.instrument = instrument\n    this.channel = instrument.channel\n    this.key = instrument.key\n    this.velocity = instrument.velocity\n    this.volume = instrument.volume\n    this.panpot = instrument.panpot\n    this.pitchBend = instrument.pitchBend\n    this.expression = instrument.expression\n    this.pitchBendSensitivity = instrument.pitchBendSensitivity\n    this.startTime = ctx.currentTime\n    this.computedPlaybackRate = this.playbackRate\n  }\n\n  noteOn() {\n    const { ctx, noteInfo } = this\n\n    const sample = noteInfo.sample.subarray(0, noteInfo.sample.length + noteInfo.end)\n    this.audioBuffer = ctx.createBuffer(1, sample.length, noteInfo.sampleRate)\n\n    const channelData = this.audioBuffer.getChannelData(0)\n    channelData.set(sample)\n\n    // buffer source\n    const bufferSource = ctx.createBufferSource()\n    bufferSource.buffer = this.audioBuffer\n    bufferSource.loop = this.sampleModes !== 0;\n    bufferSource.loopStart = noteInfo.loopStart / noteInfo.sampleRate\n    bufferSource.loopEnd = noteInfo.loopEnd / noteInfo.sampleRate\n    bufferSource.onended = () => this.disconnect()\n    this.bufferSource = bufferSource\n    this.updatePitchBend(this.pitchBend)\n\n    // audio node\n    const output = this.gainOutput = ctx.createGain()\n    const outputGain = output.gain\n\n    // expression\n    this.expressionGain = ctx.createGain();\n    //this.expressionGain.gain.value = this.expression / 127;\n    this.expressionGain.gain.setTargetAtTime(this.expression / 127, this.ctx.currentTime, 0.015);\n\n    // Modulator\n    const modulator = this.modulator = ctx.createBiquadFilter();\n\n    // filter\n    const filter = ctx.createBiquadFilter()\n    filter.type = \"lowpass\"\n    this.filter = filter\n\n    // panpot\n    // TODO: ドラムパートのPanが変化した場合、その計算をしなければならない\n    // http://cpansearch.perl.org/src/PJB/MIDI-SoundFont-1.08/doc/sfspec21.html#8.4.6\n    const pan = noteInfo.pan ? noteInfo.pan / 120 : this.panpot;\n    const panner = this.panner = ctx.createPanner()\n    panner.panningModel = \"equalpower\"\n    panner.setPosition(\n      Math.sin(pan * Math.PI / 2),\n      0,\n      Math.cos(pan * Math.PI / 2)\n    )\n\n    //---------------------------------------------------------------------------\n    // Delay, Attack, Hold, Decay, Sustain\n    //---------------------------------------------------------------------------\n    let attackVolume = this.volume * (this.velocity / 127) * (1 - noteInfo.initialAttenuation / 1000);\n    if (attackVolume < 0) {\n      attackVolume = 0;\n    }\n\n    const now = this.ctx.currentTime\n\n    const volDelay = now + noteInfo.volDelay;\n    const volAttack = volDelay + noteInfo.volAttack;\n    const volHold = volAttack + noteInfo.volHold;\n    const volDecay = volHold + noteInfo.volDecay;\n    const modDelay = now + noteInfo.modDelay;\n    const modAttack = volDelay + noteInfo.modAttack;\n    const modHold = modAttack + noteInfo.modHold;\n    const modDecay = modHold + noteInfo.modDecay;\n\n    const startTime = noteInfo.start / noteInfo.sampleRate\n\n    // volume envelope\n    outputGain\n      .setValueAtTime(0, now)\n      .setValueAtTime(0, volDelay)\n      .setTargetAtTime(attackVolume, volDelay, noteInfo.volAttack)\n      .setValueAtTime(attackVolume, volHold)\n      .linearRampToValueAtTime(attackVolume * (1 - noteInfo.volSustain), volDecay);\n\n    // modulation envelope\n    const baseFreq = this.amountToFreq(noteInfo.initialFilterFc);\n    const peekFreq = this.amountToFreq(noteInfo.initialFilterFc + noteInfo.modEnvToFilterFc);\n    const sustainFreq = baseFreq + (peekFreq - baseFreq) * (1 - noteInfo.modSustain);\n\n    modulator.Q.setValueAtTime(Math.pow(10, noteInfo.initialFilterQ / 200), now);\n    //modulator.frequency.value = baseFreq;\n    modulator.frequency.setTargetAtTime(baseFreq, this.ctx.currentTime, 0.015);\n    modulator.type = 'lowpass';\n    modulator.frequency\n      .setValueAtTime(baseFreq, now)\n      .setValueAtTime(baseFreq, modDelay)\n      .setTargetAtTime(peekFreq, modDelay, noteInfo.modAttack++) // For FireFox fix\n      .setValueAtTime(peekFreq, modHold)\n      .linearRampToValueAtTime(sustainFreq, modDecay);\n\n    // connect\n    bufferSource.connect(modulator);\n    modulator.connect(panner);\n    panner.connect(this.expressionGain);\n    this.expressionGain.connect(output);\n\n    if (!noteInfo.mute) {\n      this.gainOutput.connect(this.destination);\n    }\n\n    // fire\n    bufferSource.start(0, startTime)\n  }\n\n  amountToFreq(val: number): number {\n    return Math.pow(2, (val - 6900) / 1200) * 440\n  }\n\n  noteOff() {\n    const { noteInfo, bufferSource } = this\n    const output = this.gainOutput\n    const now = this.ctx.currentTime\n    const release = noteInfo.releaseTime - 64;\n\n    //---------------------------------------------------------------------------\n    // volume release time\n    //---------------------------------------------------------------------------\n    const volEndTimeTmp = noteInfo.volRelease * output.gain.value;\n    const volEndTime = now + (volEndTimeTmp * (1 + release / (release < 0 ? 64 : 63)));\n\n    //---------------------------------------------------------------------------\n    // modulation release time\n    //---------------------------------------------------------------------------\n    const modulator = this.modulator;\n    const baseFreq = this.amountToFreq(noteInfo.initialFilterFc);\n    const peekFreq = this.amountToFreq(noteInfo.initialFilterFc + noteInfo.modEnvToFilterFc);\n    const modEndTime = now + noteInfo.modRelease *\n      (\n        baseFreq === peekFreq ?\n          1 :\n          (modulator.frequency.value - baseFreq) / (peekFreq - baseFreq)\n      );\n\n    //---------------------------------------------------------------------------\n    // Release\n    //---------------------------------------------------------------------------\n    switch (noteInfo.sampleModes) {\n      case 0:\n        break;\n      case 1:\n        output.gain.cancelScheduledValues(0);\n        output.gain.setValueAtTime(output.gain.value, now);\n        output.gain.linearRampToValueAtTime(0, volEndTime);\n\n        modulator.frequency.cancelScheduledValues(0);\n        modulator.frequency.setValueAtTime(modulator.frequency.value, now);\n        modulator.frequency.linearRampToValueAtTime(baseFreq, modEndTime);\n\n        bufferSource.playbackRate.cancelScheduledValues(0);\n        bufferSource.playbackRate.setValueAtTime(bufferSource.playbackRate.value, now);\n        bufferSource.playbackRate.linearRampToValueAtTime(this.computedPlaybackRate, modEndTime);\n\n        bufferSource.stop(volEndTime);\n        break;\n      case 2:\n        console.log('detect unused sampleModes');\n        break;\n      case 3:\n        bufferSource.loop = false;\n        break;\n    }\n  }\n\n  disconnect() {\n    this.gainOutput.disconnect(0)\n  }\n\n  schedulePlaybackRate() {\n    const { noteInfo } = this\n    const playbackRate = this.bufferSource.playbackRate\n    const computed = this.computedPlaybackRate\n    const start = this.startTime\n    const modAttack = start + noteInfo.modAttack\n    const modDecay = modAttack + noteInfo.modDecay\n    const peekPitch = computed * Math.pow(\n      Math.pow(2, 1 / 12),\n      noteInfo.modEnvToPitch * noteInfo.scaleTuning\n    )\n\n    playbackRate.cancelScheduledValues(0)\n    playbackRate.setValueAtTime(computed, start)\n    playbackRate.linearRampToValueAtTime(peekPitch, modAttack)\n    playbackRate.linearRampToValueAtTime(computed + (peekPitch - computed) * (1 - noteInfo.modSustain), modDecay)\n  }\n\n  updateExpression(expression: number) {\n    this.expressionGain.gain.value = (this.expression = expression) / 127;\n  };\n\n  updatePitchBend(pitchBend: number) {\n    this.computedPlaybackRate = this.playbackRate * Math.pow(\n      Math.pow(2, 1 / 12),\n      (\n        this.pitchBendSensitivity * (\n          pitchBend / (pitchBend < 0 ? 8192 : 8191)\n        )\n      ) * this.noteInfo.scaleTuning\n    )\n    this.schedulePlaybackRate()\n  }\n}\n","export default class Stream {\n  private data: Uint8Array\n  ip: number\n\n  constructor(data, offset) {\n    this.data = data\n    this.ip = offset\n  }\n\n  readString(size: number): string {\n    const str = String.fromCharCode.apply(null, this.data.subarray(this.ip, this.ip += size))\n    const nullLocation = str.indexOf(\"\\u0000\")\n    if (nullLocation > 0) {\n      return str.substr(0, nullLocation)\n    }\n    return str\n  }\n\n  readWORD(): number {\n    return this.data[this.ip++] | (this.data[this.ip++] << 8)\n  }\n\n  readDWORD(bigEndian: boolean = false): number {\n    if (bigEndian) {\n      return (\n        (this.data[this.ip++] << 24)| \n        (this.data[this.ip++] << 16) | \n        (this.data[this.ip++] << 8) | \n        (this.data[this.ip++])\n      ) >>> 0\n    } else {\n      return (\n        this.data[this.ip++] | \n        (this.data[this.ip++] << 8) | \n        (this.data[this.ip++] << 16) | \n        (this.data[this.ip++] << 24)\n      ) >>> 0\n    }\n  }\n\n  readByte() {\n    return this.data[this.ip++]\n  }\n\n  readAt(offset: number) {\n    return this.data[this.ip + offset]\n  }\n\n  /* helper */\n\n  readUInt8() {\n    return this.readByte()\n  }\n  \n  readInt8() {\n    return (this.readByte() << 24) >> 24\n  }\n  \n  readUInt16() {\n    return this.readWORD()\n  }\n\n  readInt16() {\n    return (this.readWORD() << 16) >> 16\n  }\n\n  readUInt32() {\n    return this.readDWORD()\n  }\n}\n","import Stream from \"./Stream\"\n\nfunction parseChunk(input: Uint8Array, ip: number, bigEndian: boolean): Chunk {\n  const stream = new Stream(input, ip)\n  const type = stream.readString(4)\n  const size = stream.readDWORD(bigEndian)\n  return new Chunk(type, size, stream.ip)\n}\n\nexport interface Options {\n  padding?: boolean,\n  bigEndian?: boolean\n}\n\nexport function parseRiff(input: Uint8Array, index: number = 0, length: number, { padding = true, bigEndian = false }: Options = {}) {\n  const chunkList: Chunk[] = []\n  const end = length + index\n  let ip = index\n\n  while (ip < end) {\n    const chunk = parseChunk(input, ip, bigEndian)\n    ip = chunk.offset + chunk.size\n    \n    // padding\n    if (padding && ((ip - index) & 1) === 1) {\n      ip++\n    }\n    \n    chunkList.push(chunk)\n  }\n\n  return chunkList\n}\n\nexport class Chunk {\n  type: string\n  size: number\n  offset: number\n\n  constructor(type: string, size: number, offset: number) {\n    this.type = type\n    this.size = size\n    this.offset = offset\n  }\n}\n","export const GeneratorEnumeratorTable = [\n  'startAddrsOffset',\n  'endAddrsOffset',\n  'startloopAddrsOffset',\n  'endloopAddrsOffset',\n  'startAddrsCoarseOffset',\n  'modLfoToPitch',\n  'vibLfoToPitch',\n  'modEnvToPitch',\n  'initialFilterFc',\n  'initialFilterQ',\n  'modLfoToFilterFc',\n  'modEnvToFilterFc',\n  'endAddrsCoarseOffset',\n  'modLfoToVolume',\n  undefined, // 14\n  'chorusEffectsSend',\n  'reverbEffectsSend',\n  'pan',\n  undefined,undefined,undefined, // 18,19,20\n  'delayModLFO',\n  'freqModLFO',\n  'delayVibLFO',\n  'freqVibLFO',\n  'delayModEnv',\n  'attackModEnv',\n  'holdModEnv',\n  'decayModEnv',\n  'sustainModEnv',\n  'releaseModEnv',\n  'keynumToModEnvHold',\n  'keynumToModEnvDecay',\n  'delayVolEnv',\n  'attackVolEnv',\n  'holdVolEnv',\n  'decayVolEnv',\n  'sustainVolEnv',\n  'releaseVolEnv',\n  'keynumToVolEnvHold',\n  'keynumToVolEnvDecay',\n  'instrument',\n  undefined, // 42\n  'keyRange',\n  'velRange',\n  'startloopAddrsCoarseOffset',\n  'keynum',\n  'velocity',\n  'initialAttenuation',\n  undefined, // 49\n  'endloopAddrsCoarseOffset',\n  'coarseTune',\n  'fineTune',\n  'sampleID',\n  'sampleModes',\n  undefined, // 55\n  'scaleTuning',\n  'exclusiveClass',\n  'overridingRootKey'\n]\n","import { GeneratorEnumeratorTable } from \"./Constants\"\nimport Stream from \"./Stream\"\nimport { Chunk } from \"./RiffParser\"\n\nexport class VersionTag {\n  major: number\n  minor: number\n  \n  static parse(stream: Stream) {\n    const v = new VersionTag()\n    v.major = stream.readInt8()\n    v.minor = stream.readInt8()\n    return v\n  }\n}\n\nexport class Info {\n  comment: string|null\n  copyright: string|null\n  creationDate: string|null\n  engineer: string|null\n  name: string\n  product: string|null\n  software: string|null\n  version: VersionTag\n  soundEngine: string|null\n  romName: string|null\n  romVersion: VersionTag|null\n\n  // LIST - INFO の全ての chunk\n  static parse(data: Uint8Array, chunks: Chunk[]) {\n    function getChunk(type) {\n      return chunks.find(c => c.type === type) \n    }\n\n    function toStream(chunk) {\n      return new Stream(data, chunk.offset)\n    }\n\n    function readString(type) {\n      const chunk = getChunk(type)\n      if (!chunk) {\n        return null\n      }\n      return toStream(chunk)!.readString(chunk.size)\n    }\n\n    function readVersionTag(type) {\n      const chunk = getChunk(type)\n      if (!chunk) {\n        return null\n      }\n      return VersionTag.parse(toStream(chunk))\n    }\n    \n    const info = new Info()\n    info.comment = readString(\"ICMT\")\n    info.copyright = readString(\"ICOP\")\n    info.creationDate = readString(\"ICRD\")\n    info.engineer = readString(\"IENG\")\n    info.name = readString(\"INAM\")!\n    info.product = readString(\"IPRD\")\n    info.software = readString(\"ISFT\")\n    info.version = readVersionTag(\"ifil\")!\n    info.soundEngine = readString(\"isng\")\n    info.romName = readString(\"irom\")\n    info.romVersion = readVersionTag(\"iver\")\n    return info\n  }\n}\n\nexport class PresetHeader {\n  presetName: string\n  preset: number\n  bank: number\n  presetBagIndex: number\n  library: number\n  genre: number\n  morphology: number\n\n  get isEnd() {\n    return this.presetName === \"EOP\"\n  }\n\n  static parse(stream: Stream) {\n    const p = new PresetHeader()\n    p.presetName = stream.readString(20)\n    p.preset = stream.readWORD()\n    p.bank = stream.readWORD()\n    p.presetBagIndex = stream.readWORD()\n    p.library = stream.readDWORD()\n    p.genre = stream.readDWORD()\n    p.morphology = stream.readDWORD()\n    return p\n  }\n}\n\nexport class PresetBag {\n  presetGeneratorIndex: number\n  presetModulatorIndex: number\n\n  static parse(stream: Stream) {\n    const p = new PresetBag()\n    p.presetGeneratorIndex = stream.readWORD()\n    p.presetModulatorIndex = stream.readWORD()\n    return p\n  }\n}\n\nexport class RangeValue {\n  lo: number\n  hi: number\n\n  constructor(lo: number, hi: number) {\n    this.lo = lo\n    this.hi = hi\n  }\n\n  static parse(stream: Stream) {\n    return new RangeValue(\n      stream.readByte(), \n      stream.readByte()\n    )\n  }\n}\n\nexport class ModulatorList {\n  sourceOper: number\n  destinationOper: number\n  value: number|RangeValue\n  amountSourceOper: number\n  transOper: number\n\n  get type() {\n    return GeneratorEnumeratorTable[this.destinationOper]\n  }\n\n  get isEnd() {\n    return this.sourceOper === 0 && \n      this.destinationOper === 0 &&\n      this.value === 0 &&\n      this.amountSourceOper === 0 &&\n      this. transOper === 0\n  }\n\n  static parse(stream: Stream) {\n    const t = new ModulatorList()\n\n    t.sourceOper = stream.readWORD()\n    t.destinationOper = stream.readWORD()\n\n    switch (t.type) {\n      case 'keyRange': /* FALLTHROUGH */\n      case 'velRange': /* FALLTHROUGH */\n      case 'keynum': /* FALLTHROUGH */\n      case 'velocity':\n        t.value = RangeValue.parse(stream)\n        break\n      default:\n        t.value = stream.readInt16()\n        break\n    }\n    \n    t.amountSourceOper = stream.readWORD()\n    t.transOper = stream.readWORD()\n\n    return t\n  }\n}\n\nexport class GeneratorList {\n  code: number\n  value: number|RangeValue\n\n  get type() {\n    return GeneratorEnumeratorTable[this.code]\n  }\n\n  get isEnd() {\n    return this.code === 0 &&\n      this.value === 0\n  }\n\n  static parse(stream: Stream) {\n    const t = new GeneratorList()\n    t.code = stream.readWORD()\n\n    switch (t.type) {\n      case 'keynum': /* FALLTHROUGH */\n      case 'keyRange': /* FALLTHROUGH */\n      case 'velRange': /* FALLTHROUGH */\n      case 'velocity':\n        t.value = RangeValue.parse(stream)\n        break\n      default:\n        t.value = stream.readInt16()\n        break\n    }\n\n    return t\n  }\n}\n\nexport class Instrument {\n  instrumentName: string\n  instrumentBagIndex: number\n\n  get isEnd() {\n    return this.instrumentName === \"EOI\"\n  }\n  \n  static parse(stream: Stream) {\n    const t = new Instrument()\n    t.instrumentName = stream.readString(20)\n    t.instrumentBagIndex = stream.readWORD()\n    return t\n  }\n}\n\nexport class InstrumentBag {\n  instrumentGeneratorIndex: number\n  instrumentModulatorIndex: number\n  \n  static parse(stream: Stream) {\n    const t = new InstrumentBag()\n    t.instrumentGeneratorIndex = stream.readWORD()\n    t.instrumentModulatorIndex = stream.readWORD()\n    return t\n  }\n}\n\nexport class SampleHeader {\n  sampleName: string\n  start: number\n  end: number\n  loopStart: number\n  loopEnd: number\n  sampleRate: number\n  originalPitch: number\n  pitchCorrection: number\n  sampleLink: number\n  sampleType: number\n\n  get isEnd() {\n    return this.sampleName === \"EOS\"\n  }\n\n  static parse(stream: Stream) {\n    const s = new SampleHeader()\n\n    s.sampleName = stream.readString(20)\n    s.start = stream.readDWORD()\n    s.end = stream.readDWORD()\n    s.loopStart = stream.readDWORD()\n    s.loopEnd = stream.readDWORD()\n    s.sampleRate = stream.readDWORD()\n    s.originalPitch = stream.readByte()\n    s.pitchCorrection = stream.readInt8()\n    s.sampleLink = stream.readWORD()\n    s.sampleType = stream.readWORD()\n\n    s.loopStart -= s.start\n    s.loopEnd -= s.start\n\n    return s\n  }\n}\n\nexport const SampleLink = {\n  monoSample: 1,\n  rightSample: 2,\n  leftSample: 4,\n  linkedSample: 8,\n  RomMonoSample: 0x8001,\n  RomRightSample: 0x8002,\n  RomLeftSample: 0x8004,\n  RomLinkedSample: 0x8008\n}\n","import { parseRiff, Chunk, Options as RiffParserOptions } from \"./RiffParser\"\nimport { PresetHeader, SampleHeader, PresetBag, Instrument, InstrumentBag, ModulatorList, GeneratorList, Info } from \"./Structs\"\nimport Stream from \"./Stream\"\n\nexport interface ParseResult {\n  presetHeaders: PresetHeader[]\n  presetZone: PresetBag[]\n  presetModulators: ModulatorList[]\n  presetGenerators: GeneratorList[]\n  instruments: Instrument[]\n  instrumentZone: InstrumentBag[]\n  instrumentModulators: ModulatorList[]\n  instrumentGenerators: GeneratorList[]\n  sampleHeaders: SampleHeader[]\n  samples: Int16Array[]\n  samplingData: Chunk\n  info: Info\n}\n\nexport default function parse(input: Uint8Array, option: RiffParserOptions = {}): ParseResult {\n\n  // parse RIFF chunk\n  const chunkList = parseRiff(input, 0, input.length, option)\n\n  if (chunkList.length !== 1) {\n    throw new Error('wrong chunk length')\n  }\n\n  const chunk = chunkList[0]\n  if (chunk === null) {\n    throw new Error('chunk not found')\n  }\n\n  function parseRiffChunk(chunk: Chunk, data: Uint8Array) {\n    const chunkList = getChunkList(chunk, data, \"RIFF\", \"sfbk\")\n\n    if (chunkList.length !== 3) {\n      throw new Error('invalid sfbk structure')\n    }\n\n    return {\n      // INFO-list\n      info: parseInfoList(chunkList[0], data),\n\n      // sdta-list\n      samplingData: parseSdtaList(chunkList[1], data),\n\n      // pdta-list\n      ...parsePdtaList(chunkList[2], data)\n    }\n  }\n\n  function parsePdtaList(chunk: Chunk, data: Uint8Array) {\n    const chunkList = getChunkList(chunk, data, \"LIST\", \"pdta\")\n\n    // check number of chunks\n    if (chunkList.length !== 9) {\n      throw new Error('invalid pdta chunk')\n    }\n\n    return {\n      presetHeaders: parsePhdr(chunkList[0], data),\n      presetZone: parsePbag(chunkList[1], data),\n      presetModulators: parsePmod(chunkList[2], data),\n      presetGenerators: parsePgen(chunkList[3], data),\n      instruments: parseInst(chunkList[4], data),\n      instrumentZone: parseIbag(chunkList[5], data),\n      instrumentModulators: parseImod(chunkList[6], data),\n      instrumentGenerators: parseIgen(chunkList[7], data),\n      sampleHeaders: parseShdr(chunkList[8], data)\n    }\n  }\n\n  const result = parseRiffChunk(chunk, input)\n\n  return {\n    ...result,\n    samples: loadSample(result.sampleHeaders, result.samplingData.offset, input)\n  }\n}\n\nfunction getChunkList(chunk, data, expectedType, expectedSignature) {\n  // check parse target\n  if (chunk.type !== expectedType) {\n    throw new Error('invalid chunk type:' + chunk.type)\n  }\n\n  const stream = new Stream(data, chunk.offset)\n\n  // check signature\n  const signature = stream.readString(4)\n  if (signature !== expectedSignature) {\n    throw new Error('invalid signature:' + signature)\n  }\n\n  // read structure\n  return parseRiff(data, stream.ip, chunk.size - 4)\n}\n\nfunction parseInfoList(chunk: Chunk, data: Uint8Array) {\n  const chunkList = getChunkList(chunk, data, \"LIST\", \"INFO\")\n  return Info.parse(data, chunkList)\n}\n\nfunction parseSdtaList(chunk: Chunk, data: Uint8Array): Chunk {\n  const chunkList = getChunkList(chunk, data, \"LIST\", \"sdta\")\n\n  if (chunkList.length !== 1) {\n    throw new Error('TODO')\n  }\n\n  return chunkList[0]\n}\n\nfunction parseChunk<T>(chunk: Chunk, data: Uint8Array, type: string, clazz: { parse: (stream: Stream) => T }, terminate?: (obj: T) => boolean): T[] {\n  const result: T[] = []\n\n  if (chunk.type !== type) {\n    throw new Error('invalid chunk type:'  + chunk.type)\n  }\n  \n  const stream = new Stream(data, chunk.offset)\n  const size = chunk.offset + chunk.size\n  \n  while (stream.ip < size) {\n    const obj = clazz.parse(stream)\n    if (terminate && terminate(obj)) {\n      break\n    }\n    result.push(obj)\n  }\n\n  return result\n}\n\nconst parsePhdr = (chunk, data) => parseChunk(chunk, data, \"phdr\", PresetHeader, p => p.isEnd)\nconst parsePbag = (chunk, data) => parseChunk(chunk, data, \"pbag\", PresetBag)\nconst parseInst = (chunk, data) => parseChunk(chunk, data, \"inst\", Instrument, i => i.isEnd)\nconst parseIbag = (chunk, data) => parseChunk(chunk, data, \"ibag\", InstrumentBag)\nconst parsePmod = (chunk, data) => parseChunk(chunk, data, \"pmod\", ModulatorList, m => m.isEnd)\nconst parseImod = (chunk, data) => parseChunk(chunk, data, \"imod\", ModulatorList, m => m.isEnd)\nconst parsePgen = (chunk, data) => parseChunk(chunk, data, \"pgen\", GeneratorList, g => g.isEnd)\nconst parseIgen = (chunk, data) => parseChunk(chunk, data, \"igen\", GeneratorList)\nconst parseShdr = (chunk, data) => parseChunk(chunk, data, \"shdr\", SampleHeader, s => s.isEnd)\n\nfunction adjustSampleData(sample, sampleRate) {\n  let multiply = 1\n\n  // buffer\n  while (sampleRate < 22050) {\n    const newSample = new Int16Array(sample.length * 2)\n    for (let i = 0, j = 0, il = sample.length; i < il; ++i) {\n      newSample[j++] = sample[i]\n      newSample[j++] = sample[i]\n    }\n    sample = newSample\n    multiply *= 2\n    sampleRate *= 2\n  }\n\n  return {\n    sample,\n    multiply\n  }\n}\n\nfunction loadSample(sampleHeader: SampleHeader[], samplingDataOffset: number, data: Uint8Array): Int16Array[] {\n  return sampleHeader.map(header => {\n    let sample = new Int16Array(new Uint8Array(data.subarray(\n      samplingDataOffset + header.start * 2,\n      samplingDataOffset + header.end   * 2\n    )).buffer)\n    if (header.sampleRate > 0) {\n      const adjust = adjustSampleData(sample, header.sampleRate)\n      sample = adjust.sample\n      header.sampleRate *= adjust.multiply\n      header.loopStart *= adjust.multiply\n      header.loopEnd *= adjust.multiply\n    }\n    return sample\n  })\n}","import { ParseResult } from \"./Parser\"\nimport { RangeValue, GeneratorList } from \"./Structs\"\n\n/**\n * Parser で読み込んだサウンドフォントのデータを\n * Synthesizer から利用しやすい形にするクラス\n */\nexport default class SoundFont {\n  private parsed: ParseResult\n\n  constructor(parsed: ParseResult) {\n    this.parsed = parsed\n  }\n\n  getPresetZone(presetHeaderIndex: number) {\n    let presetGenerators: GeneratorList[]\n    const presetHeader = this.parsed.presetHeaders[presetHeaderIndex]\n    const presetBag = this.parsed.presetZone[presetHeader.presetBagIndex]\n\n    const nextPresetHeaderIndex = presetHeaderIndex + 1\n    if (nextPresetHeaderIndex < this.parsed.presetHeaders.length) {\n      // 次の preset までのすべての generator を取得する\n      const nextPresetHeader = this.parsed.presetHeaders[nextPresetHeaderIndex]\n      const nextPresetBag = this.parsed.presetZone[nextPresetHeader.presetBagIndex]\n      presetGenerators = this.parsed.presetGenerators.slice(presetBag.presetGeneratorIndex, nextPresetBag.presetGeneratorIndex)\n    } else {\n      // 最後の preset だった場合は最後まで取得する\n      presetGenerators = this.parsed.presetGenerators.slice(presetBag.presetGeneratorIndex, this.parsed.presetGenerators.length)\n    }\n\n    return presetGenerators\n  }\n\n  getInstrumentZone(instrumentZoneIndex: number) {\n    const instrumentBag = this.parsed.instrumentZone[instrumentZoneIndex]\n    const nextInstrumentBag = this.parsed.instrumentZone[instrumentZoneIndex + 1]\n    const generatorIndex = instrumentBag.instrumentGeneratorIndex\n    const nextGeneratorIndex = nextInstrumentBag ? nextInstrumentBag.instrumentGeneratorIndex : this.parsed.instrumentGenerators.length\n    const generators = this.parsed.instrumentGenerators.slice(generatorIndex, nextGeneratorIndex)\n    return createInstrumentZone(generators)\n  }\n\n  getInstrumentZoneIndexes(instrumentID: number): number[] {\n    const instrument = this.parsed.instruments[instrumentID]\n    const nextInstrument = this.parsed.instruments[instrumentID + 1]\n    return arrayRange(instrument.instrumentBagIndex, nextInstrument ? nextInstrument.instrumentBagIndex : this.parsed.instrumentZone.length)\n  }\n\n  getInstrumentKey(bankNumber, instrumentNumber, key, velocity = 100): NoteInfo | null {\n    const presetHeaderIndex = this.parsed.presetHeaders.findIndex(p => p.preset === instrumentNumber && p.bank === bankNumber)\n\n    if (presetHeaderIndex < 0) {\n      console.warn(\"preset not found: bank=%s instrument=%s\", bankNumber, instrumentNumber)\n      return null\n    }\n\n    const presetGenerators = this.getPresetZone(presetHeaderIndex)\n\n    // Last Preset Generator must be instrument\n    const lastPresetGenertor = presetGenerators[presetGenerators.length - 1]\n    if (lastPresetGenertor.type !== \"instrument\" || isNaN(Number(lastPresetGenertor.value))) {\n      throw new Error(\"Invalid SoundFont: invalid preset generator: expect instrument\")\n    }\n    const instrumentID = lastPresetGenertor.value as number\n    const instrumentZones = this.getInstrumentZoneIndexes(instrumentID).map(i => this.getInstrumentZone(i))\n\n    // 最初のゾーンがsampleID を持たなければ global instrument zone\n    let globalInstrumentZone: any | undefined\n    const firstInstrumentZone = instrumentZones[0]\n    if (firstInstrumentZone.sampleID === undefined) {\n      globalInstrumentZone = instrumentZones[0]\n    }\n\n    // keyRange と velRange がマッチしている Generator を探す\n    const instrumentZone = instrumentZones.find(i => {\n      if (i === globalInstrumentZone) {\n        return false // global zone を除外\n      }\n\n      let isInKeyRange = false\n      if (i.keyRange) {\n        isInKeyRange = key >= i.keyRange.lo && key <= i.keyRange.hi\n      }\n\n      let isInVelRange = true\n      if (i.velRange) {\n        isInVelRange = velocity >= i.velRange.lo && velocity <= i.velRange.hi\n      }\n\n      return isInKeyRange && isInVelRange\n    })\n\n    if (!instrumentZone) {\n      console.warn(\"instrument not found: bank=%s instrument=%s\", bankNumber, instrumentNumber)\n      return null\n    }\n\n    if (instrumentZone.sampleID === undefined) {\n      throw new Error(\"Invalid SoundFont: sampleID not found\")\n    }\n\n    const gen = { ...defaultInstrumentZone, ...removeUndefined(globalInstrumentZone || {}), ...removeUndefined(instrumentZone) }\n\n    const sample = this.parsed.samples[gen.sampleID!]\n    const sampleHeader = this.parsed.sampleHeaders[gen.sampleID!]\n    const tune = gen.coarseTune + gen.fineTune / 100\n    const basePitch = tune + (sampleHeader.pitchCorrection / 100) - (gen.overridingRootKey || sampleHeader.originalPitch)\n    const scaleTuning = gen.scaleTuning / 100\n\n    return {\n      sample,\n      sampleRate: sampleHeader.sampleRate,\n      sampleName: sampleHeader.sampleName,\n      sampleModes: gen.sampleModes,\n      playbackRate: (key) => Math.pow(Math.pow(2, 1 / 12), (key + basePitch) * scaleTuning),\n      modEnvToPitch: gen.modEnvToPitch / 100, // cent\n      scaleTuning,\n      start: gen.startAddrsCoarseOffset * 32768 + gen.startAddrsOffset,\n      end: gen.endAddrsCoarseOffset * 32768 + gen.endAddrsOffset,\n      loopStart: (\n        sampleHeader.loopStart +\n        gen.startloopAddrsCoarseOffset * 32768 +\n        gen.startloopAddrsOffset\n      ),\n      loopEnd: (\n        sampleHeader.loopEnd +\n        gen.endloopAddrsCoarseOffset * 32768 +\n        gen.endloopAddrsOffset\n      ),\n      volDelay: convertTime(gen.volDelay),\n      volAttack: convertTime(gen.volAttack),\n      volHold: convertTime(gen.volHold),\n      volDecay: convertTime(gen.volDecay),\n      volSustain: gen.volSustain / 1000,\n      volRelease: convertTime(gen.volRelease),\n      modDelay: convertTime(gen.modDelay),\n      modAttack: convertTime(gen.modAttack),\n      modHold: convertTime(gen.modHold),\n      modDecay: convertTime(gen.modDecay),\n      modSustain: gen.modSustain / 1000,\n      modRelease: convertTime(gen.modRelease),\n      keyRange: gen.keyRange,\n      velRange: gen.velRange,\n      initialFilterFc: gen.initialFilterFc,\n      modEnvToFilterFc: gen.modEnvToFilterFc, // semitone (100 cent)\n      initialFilterQ: gen.initialFilterQ,\n      initialAttenuation: gen.initialAttenuation,\n      freqVibLFO: gen.freqVibLFO ? convertTime(gen.freqVibLFO) * 8.176 : undefined,\n      pan: gen.pan,\n      mute: false,\n      releaseTime: gen.releaseTime\n    }\n  }\n\n  // presetNames[bankNumber][presetNumber] = presetName\n  getPresetNames() {\n    const bank: { [index: number]: { [index: number]: string } } = {}\n    this.parsed.presetHeaders.forEach(preset => {\n      if (!bank[preset.bank]) {\n        bank[preset.bank] = {}\n      }\n      bank[preset.bank][preset.preset] = preset.presetName\n    })\n    return bank\n  }\n}\n\n// value = 1200log2(sec) で表される時間を秒単位に変換する\nexport function convertTime(value) {\n  return Math.pow(2, value / 1200)\n}\n\nfunction removeUndefined(obj) {\n  const result = {}\n  Object.keys(obj).forEach(key => {\n    if (obj[key] !== undefined) {\n      result[key] = obj[key]\n    }\n  })\n  return result\n}\n\nfunction arrayRange(start, end) {\n  return Array.from({ length: end - start }, (_, k) => k + start);\n}\n\n// ひとつの instrument に対応する Generator の配列から使いやすくしたオブジェクトを返す\nfunction createInstrumentZone(instrumentGenerators: GeneratorList[]) {\n  function getValue(type: string): number | undefined {\n    const generator = instrumentGenerators.find(g => g.type === type)\n    if (!generator) {\n      return undefined\n    }\n    if (isNaN(Number(generator.value))) {\n      throw new Error(\"something wrong\")\n    }\n    return generator.value as number\n  }\n\n  // First Instrument Generator must be keyRange\n  const firstInstrumentGenerator = instrumentGenerators[0]\n  let keyRange: RangeValue | undefined\n  if (firstInstrumentGenerator && firstInstrumentGenerator.type === \"keyRange\") {\n    if (!(firstInstrumentGenerator.value instanceof RangeValue)) {\n      throw new Error(\"Invalid SoundFont: keyRange is not ranged value\")\n    }\n    keyRange = firstInstrumentGenerator.value as RangeValue\n  }\n\n  // Second Instrument Generator could be velRange\n  const secondInstrumentGenerator = instrumentGenerators[1]\n  let velRange: RangeValue | undefined\n  if (secondInstrumentGenerator && secondInstrumentGenerator.type === \"velRange\") {\n    if (!(secondInstrumentGenerator.value instanceof RangeValue)) {\n      throw new Error(\"Invalid SoundFont: velRange is not ranged value\")\n    }\n    velRange = secondInstrumentGenerator.value as RangeValue\n  }\n\n  // Last Instrument Generator must be sampleID\n  const lastInstrumentGenerator = instrumentGenerators[instrumentGenerators.length - 1]\n  let sampleID: number | undefined\n  if (lastInstrumentGenerator && lastInstrumentGenerator.type === \"sampleID\") {\n    if (isNaN(Number(lastInstrumentGenerator.value))) {\n      throw new Error(\"Invalid SoundFont: sampleID is not number\")\n    }\n    sampleID = lastInstrumentGenerator.value as number\n  }\n  \n  return {\n    keyRange, // あるはずだが global zone には無いかもしれない\n    velRange, // optional\n    sampleID, // global zone の場合だけない\n    volAttack: getValue(\"attackVolEnv\"),\n    volDecay: getValue(\"decayVolEnv\"),\n    volDelay: getValue(\"delayVolEnv\"),\n    volSustain: getValue(\"sustainVolEnv\"),\n    volRelease: getValue(\"releaseVolEnv\"),\n    modAttack: getValue(\"attackModEnv\"),\n    modDecay: getValue(\"decayModEnv\"),\n    modDelay: getValue(\"delayModEnv\"),\n    modSustain: getValue(\"sustainModEnv\"),\n    modRelease: getValue(\"releaseModEnv\"),\n    modEnvToPitch: getValue(\"modEnvToPitch\"),\n    modEnvToFilterFc: getValue(\"modEnvToFilterFc\"),\n    coarseTune: getValue(\"coarseTune\"),\n    fineTune: getValue(\"fineTune\"),\n    scaleTuning: getValue(\"scaleTuning\"),\n    freqVibLFO: getValue(\"freqVibLFO\"),\n    startAddrsOffset: getValue(\"startAddrsOffset\"),\n    startAddrsCoarseOffset: getValue(\"startAddrsCoarseOffset\"),\n    endAddrsOffset: getValue(\"endAddrsOffset\"),\n    endAddrsCoarseOffset: getValue(\"endAddrsCoarseOffset\"),\n    startloopAddrsOffset: getValue(\"startloopAddrsOffset\"),\n    startloopAddrsCoarseOffset: getValue(\"startloopAddrsCoarseOffset\"),\n    endloopAddrsOffset: getValue(\"endloopAddrsOffset\"),\n    initialAttenuation: getValue(\"initialAttenuation\"),\n    endloopAddrsCoarseOffset: getValue(\"endloopAddrsCoarseOffset\"),\n    overridingRootKey: getValue(\"overridingRootKey\"),\n    initialFilterQ: getValue(\"initialFilterQ\"),\n    initialFilterFc: getValue(\"initialFilterFc\"),\n    sampleModes: getValue(\"sampleModes\"),\n    pan: getValue(\"pan\")\n  }\n}\n\nconst defaultInstrumentZone = {\n  keyRange: new RangeValue(0, 127),\n  velRange: new RangeValue(0, 127),\n  sampleID: undefined,\n  volDelay: -12000,\n  volAttack: -12000,\n  volDecay: -12000,\n  volHold: -12000,\n  volSustain: 0,\n  volRelease: -12000,\n  modDelay: -12000,\n  modAttack: -12000,\n  modHold: -12000,\n  modDecay: -12000,\n  modSustain: 0,\n  modRelease: -12000,\n  modEnvToPitch: 0,\n  modEnvToFilterFc: 0,\n  coarseTune: 0,\n  fineTune: 0,\n  scaleTuning: 100,\n  freqVibLFO: 0,\n  startAddrsOffset: 0,\n  startAddrsCoarseOffset: 0,\n  endAddrsOffset: 0,\n  endAddrsCoarseOffset: 0,\n  startloopAddrsOffset: 0,\n  startloopAddrsCoarseOffset: 0,\n  initialAttenuation: 0,\n  endloopAddrsOffset: 0,\n  endloopAddrsCoarseOffset: 0,\n  overridingRootKey: undefined,\n  initialFilterQ: 1,\n  initialFilterFc: 13500,\n  sampleModes: 0,\n  mute: false,\n  releaseTime: 64,\n  pan: undefined\n}\n\nexport interface NoteInfo {\n  sample: Int16Array\n  sampleRate: number\n  sampleName: string\n  sampleModes: number\n  playbackRate: Function\n  modEnvToPitch: number\n  scaleTuning: number\n  start: number\n  end: number\n  loopStart: number\n  loopEnd: number\n  volDelay: number\n  volAttack: number\n  volHold: number\n  volDecay: number\n  volSustain: number\n  volRelease: number\n  modDelay: number\n  modAttack: number\n  modHold: number\n  modDecay: number\n  modSustain: number\n  modRelease: number\n  initialFilterFc: number\n  modEnvToFilterFc: number\n  initialFilterQ: number\n  initialAttenuation: number\n  freqVibLFO: number | undefined\n  mute: boolean\n  releaseTime: number\n  pan: number | undefined\n  keyRange: RangeValue\n  velRange: RangeValue | undefined\n}\n","import SynthesizerNote from \"./SynthesizerNote\"\nimport parse from \"../parser/Parser\"\nimport SoundFont from \"../parser/SoundFont\"\nimport { InstrumentState } from \"./SynthesizerNote\"\nimport { Listener } from \"./MidiMessageHandler\"\n\nconst BASE_VOLUME = 0.4\n\nclass Channel {\n  instrument = 0\n  volume = 0\n  pitchBend = 0\n  pitchBendSensitivity = 0\n  panpot = 0\n  expression = 0\n  releaseTime = 0\n  reverb = 0\n  currentNoteOn: SynthesizerNote[] = []\n  hold = false\n  bankMsb = 0\n  bankLsb = 0\n  isPercussionPart = false\n  harmonicContent = 0\n  cutOffFrequency = 0\n  mute = false\n}\n\nexport default class Synthesizer implements Listener {\n  bufferSize: number = 1024\n  ctx: AudioContext\n  gainMaster: GainNode\n  channels: Channel[] = []\n  masterVolume: number = 1.0\n  soundFont: SoundFont\n\n  isXG: boolean\n  isGS: boolean\n\n  constructor(ctx) {\n    this.ctx = ctx\n    this.gainMaster = this.ctx.createGain()\n    this.setMasterVolume(this.masterVolume)\n    this.init()\n  }\n\n  init() {\n    this.channels = [];\n    for (let i = 0; i < 16; ++i) {\n      this.channels.push(new Channel())\n      this.programChange(i, 0x00)\n      this.volumeChange(i, 0x64)\n      this.panpotChange(i, 0x40)\n      this.pitchBend(i, 0)\n      this.pitchBendSensitivity(i, 2)\n      this.hold(i, false)\n      this.expression(i, 0x7f)\n      this.bankSelectMsb(i, i === 9 ? 0x80 : 0x00)\n      this.bankSelectLsb(i, 0x00)\n      this.setPercussionPart(i, i === 9)\n      this.releaseTime(i, 0x40)\n      this.setReverbDepth(i, 0x28)\n    }\n  }\n\n  loadSoundFont(input: Uint8Array) {\n    const parser = parse(input)\n    this.soundFont = new SoundFont(parser)\n  }\n\n  connect(destination: AudioNode) {\n    this.gainMaster.connect(destination)\n  }\n\n  setMasterVolume(volume: number) {\n    const vol = BASE_VOLUME * volume / 0x8000;\n    this.masterVolume = volume\n    if (vol) {\n      //this.gainMaster.gain.value = BASE_VOLUME * volume / 0x8000\n      this.gainMaster.gain.setTargetAtTime(BASE_VOLUME * volume / 0x8000, this.ctx.currentTime, 0.015);\n    }\n  }\n\n  noteOn(channelNumber: number, key: number, velocity: number) {\n    if (!this.soundFont) {\n      return\n    }\n    const bankNumber = this.getBank(channelNumber);\n    const channel = this.channels[channelNumber]\n\n    if (channel === undefined) {\n      return;\n    }\n\n    const noteInfo = this.soundFont.getInstrumentKey(bankNumber, channel.instrument, key, velocity)\n\n    if (!noteInfo) {\n      return\n    }\n\n    let panpot = channel.panpot - 64\n    panpot /= panpot < 0 ? 64 : 63\n\n    // create note information\n    const instrumentKey: InstrumentState = {\n      channel: channelNumber,\n      key: key,\n      velocity: velocity,\n      panpot: panpot,\n      volume: channel.volume / 127,\n      pitchBend: channel.pitchBend,\n      expression: channel.expression,\n      pitchBendSensitivity: channel.pitchBendSensitivity,\n      mute: channel.mute,\n      releaseTime: channel.releaseTime,\n      cutOffFrequency: channel.cutOffFrequency,\n      harmonicContent: channel.harmonicContent\n    }\n\n    // percussion\n    if (channel.isPercussionPart) {\n      if (key === 42 || key === 44) {\n        // 42: Closed Hi-Hat\n        // 44: Pedal Hi-Hat\n        // 46: Open Hi-Hat\n        this.noteOff(channelNumber, 46, 0);\n      }\n      if (key === 80) {\n        // 80: Mute Triangle\n        // 81: Open Triangle\n        this.noteOff(channelNumber, 81, 0);\n      }\n    }\n\n    // note on\n    const note = new SynthesizerNote(this.ctx, this.gainMaster, noteInfo, instrumentKey)\n    note.noteOn()\n    this.channels[channelNumber].currentNoteOn.push(note)\n  }\n\n  noteOff(channelNumber: number, key: number, _velocity: number) {\n    if (!this.soundFont) {\n      return\n    }\n    const bankNumber = this.getBank(channelNumber);\n    const channel = this.channels[channelNumber]\n\n    if (channel === undefined) {\n      return;\n    }\n\n    const instrumentKey = this.soundFont.getInstrumentKey(bankNumber, channel.instrument, key)\n\n    if (!instrumentKey) {\n      return\n    }\n\n    const currentNoteOn = channel.currentNoteOn\n\n    for (let i = 0, il = currentNoteOn.length; i < il; ++i) {\n      const note = currentNoteOn[i]\n      if (note.key === key) {\n        note.noteOff()\n        currentNoteOn.splice(i, 1)\n        --i\n        --il\n      }\n    }\n  }\n\n  hold(channelNumber: number, value: boolean) {\n    this.channels[channelNumber].hold = value;\n  }\n\n  bankSelectMsb(channelNumber: number, value: number) {\n    this.channels[channelNumber].bankMsb = value;\n  }\n\n  bankSelectLsb(channelNumber: number, value: number) {\n    this.channels[channelNumber].bankLsb = value;\n  }\n\n  programChange(channelNumber: number, instrument: number) {\n    this.channels[channelNumber].instrument = instrument\n  }\n\n  volumeChange(channelNumber: number, volume: number) {\n    this.channels[channelNumber].volume = volume\n  }\n\n  expression(channelNumber: number, expression: number) {\n    const currentNoteOn = this.channels[channelNumber].currentNoteOn\n    for (let i = 0, il = currentNoteOn.length; i < il; ++i) {\n      currentNoteOn[i].updateExpression(expression);\n    }\n\n    this.channels[channelNumber].expression = expression;\n  };\n\n  panpotChange(channelNumber: number, panpot: number) {\n    this.channels[channelNumber].panpot = panpot\n  }\n\n  pitchBend(channelNumber: number, pitchBend: number) {\n    pitchBend -= 0x2000\n    const channel = this.channels[channelNumber]\n\n    for (let note of channel.currentNoteOn) {\n      note.updatePitchBend(pitchBend)\n    }\n\n    channel.pitchBend = pitchBend\n  }\n\n  pitchBendSensitivity(channelNumber: number, sensitivity: number) {\n    this.channels[channelNumber].pitchBendSensitivity = sensitivity\n  }\n\n  releaseTime(channelNumber: number, releaseTime: number) {\n    this.channels[channelNumber].releaseTime = releaseTime;\n  }\n\n  allSoundOff(channelNumber: number) {\n    const currentNoteOn = this.channels[channelNumber].currentNoteOn\n\n    while (currentNoteOn.length > 0) {\n      this.noteOff(channelNumber, currentNoteOn[0].key, 0)\n    }\n  }\n\n  resetAllControl(channelNumber: number) {\n    this.pitchBend(channelNumber, 0)\n  }\n\n  setReverbDepth(channelNumber: number, depth: number) {\n    this.channels[channelNumber].reverb = depth\n  }\n\n  private getBank(channelNumber: number):number {\n    let bankIndex = 0;\n    const channel = this.channels[channelNumber];\n\n    if (channel === undefined) {\n      return 0;\n    }\n\n    if (channelNumber === 9) {\n      this.setPercussionPart(9, true);\n      return this.isXG ? 127 : 128;\n    }\n\n    if (this.isXG) {\n      // XG音源は、MSB→LSBの優先順でバンクセレクトをする。\n      if (channel.bankMsb === 64) {\n        // Bank Select MSB #64 (Voice Type: SFX)\n        bankIndex = 125;\n      } else if (channel.bankMsb === 126 || channel.bankMsb === 127) {\n        // Bank Select MSB #126 (Voice Type: Drum)\n        // Bank Select MSB #127 (Voice Type: Drum)\n        bankIndex = channel.bankMsb;\n      } else {\n        // Bank Select MSB #0 (Voice Type: Normal)\n        // TODO:本来こちらが正しいが、バンクに存在しない楽器の処理ができていないためコメントアウト\n        //bankIndex = this.channelBankLsb[channel];  \n        bankIndex = 0;\n      }\n    } else if (this.isGS) {\n      // GS音源\n      bankIndex = 0;\n\n      if (channel.isPercussionPart) {\n        // http://www.roland.co.jp/support/by_product/sd-20/knowledge_base/1826700/\n        bankIndex = 128;\n      } else {\n        // TODO: XG音源前提なんで・・・\n        //bankIndex = this.channelBankMsb[channel];\n      }\n    } else {\n      // GM音源の場合バンクセレクト無効化\n      bankIndex = 0;\n    }\n    //if (this.percussionPart[channel] && SoundFont.Instruments.PercussionProgramName[this.channelInstrument[channel]] === void 0) {\n    // パーカッションチャンネルで、GM に存在しないドラムセットが呼び出された時は、Standard Setを呼び出す。\n    //this.channelInstrument[channel] = 0;\n    //}\n    return bankIndex;\n  }\n  setPercussionPart(channelNumber: number, sw: boolean) {\n    this.channels[channelNumber].isPercussionPart = sw;\n  }\n}\n","const ProgramNames: { [index: number]: (string | null)[] } = {\n  /**\n   * GM Synth set\n   * http://amei.or.jp/midistandardcommittee/Recommended_Practice/GM2_japanese.pdf\n   */\n  0: [\n    \"Acoustic Piano\",\n    \"Bright Acoustic Piano\",\n    \"Electric Grand Piano\",\n    \"Honky-tonk Piano\",\n    \"Electric Piano\",\n    \"Electric Piano 2\",\n    \"Harpsichord\",\n    \"Clavi\",\n    \"Celesta\",\n    \"Glockenspiel\",\n    \"Musical box\",\n    \"Vibraphone\",\n    \"Marimba\",\n    \"Xylophone\",\n    \"Tubular Bell\",\n    \"Dulcimer\",\n    \"Drawbar Organ\",\n    \"Percussive Organ\",\n    \"Rock Organ\",\n    \"Church organ\",\n    \"Reed organ\",\n    \"Accordion\",\n    \"Harmonica\",\n    \"Tango Accordion\",\n    \"Acoustic Guitar (nylon)\",\n    \"Acoustic Guitar (steel)\",\n    \"Electric Guitar (jazz)\",\n    \"Electric Guitar (clean)\",\n    \"Electric Guitar (muted)\",\n    \"Overdriven Guitar\",\n    \"Distortion Guitar\",\n    \"Guitar Harmonics\",\n    \"Acoustic Bass\",\n    \"Electric Bass (finger)\",\n    \"Electric Bass (pick)\",\n    \"Fretless Bass\",\n    \"Slap Bass 1\",\n    \"Slap Bass 2\",\n    \"Synth Bass 1\",\n    \"Synth Bass 2\",\n    \"Violin\",\n    \"Viola\",\n    \"Cello\",\n    \"Double bass\",\n    \"Tremolo Strings\",\n    \"Pizzicato Strings\",\n    \"Orchestral Harp\",\n    \"Timpani\",\n    \"String Ensemble 1\",\n    \"String Ensemble 2\",\n    \"Synth Strings 1\",\n    \"Synth Strings 2\",\n    \"Voice Aahs\",\n    \"Voice Oohs\",\n    \"Synth Voice\",\n    \"Orchestra Hit\",\n    \"Trumpet\",\n    \"Trombone\",\n    \"Tuba\",\n    \"Muted Trumpet\",\n    \"French horn\",\n    \"Brass Section\",\n    \"Synth Brass 1\",\n    \"Synth Brass 2\",\n    \"Soprano Sax\",\n    \"Alto Sax\",\n    \"Tenor Sax\",\n    \"Baritone Sax\",\n    \"Oboe\",\n    \"English Horn\",\n    \"Bassoon\",\n    \"Clarinet\",\n    \"Piccolo\",\n    \"Flute\",\n    \"Recorder\",\n    \"Pan Flute\",\n    \"Blown Bottle\",\n    \"Shakuhachi\",\n    \"Whistle\",\n    \"Ocarina\",\n    \"Lead 1 (square)\",\n    \"Lead 2 (sawtooth)\",\n    \"Lead 3 (calliope)\",\n    \"Lead 4 (chiff)\",\n    \"Lead 5 (charang)\",\n    \"Lead 6 (voice)\",\n    \"Lead 7 (fifths)\",\n    \"Lead 8 (bass + lead)\",\n    \"Pad 1 (new age)\",\n    \"Pad 2 (warm)\",\n    \"Pad 3 (polysynth)\",\n    \"Pad 4 (choir)\",\n    \"Pad 5 (bowed)\",\n    \"Pad 6 (metallic)\",\n    \"Pad 7 (halo)\",\n    \"Pad 8 (sweep)\",\n    \"FX 1 (rain)\",\n    \"FX 2 (soundtrack)\",\n    \"FX 3 (crystal)\",\n    \"FX 4 (atmosphere)\",\n    \"FX 5 (brightness)\",\n    \"FX 6 (goblins)\",\n    \"FX 7 (echoes)\",\n    \"FX 8 (sci-fi)\",\n    \"Sitar\",\n    \"Banjo\",\n    \"Shamisen\",\n    \"Koto\",\n    \"Kalimba\",\n    \"Bagpipe\",\n    \"Fiddle\",\n    \"Shanai\",\n    \"Tinkle Bell\",\n    \"Agogo\",\n    \"Steel Drums\",\n    \"Woodblock\",\n    \"Taiko Drum\",\n    \"Melodic Tom\",\n    \"Synth Drum\",\n    \"Reverse Cymbal\",\n    \"Guitar Fret Noise\",\n    \"Breath Noise\",\n    \"Seashore\",\n    \"Bird Tweet\",\n    \"Telephone Ring\",\n    \"Helicopter\",\n    \"Applause\",\n    \"Gunshot\"\n  ],\n  /**\n   * GM2 Drum Set List\n   */\n  128: [\n    \"Standard Set\",\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    \"Room Set\",\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    \"Power Set\",\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    \"Electronic Set\",\n    \"Analog Set\",\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    \"Jazz Set\",\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    \"Brush Set\",\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    \"Orchestra Set\",\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    null,\n    \"SFX Set\"\n  ]\n}\n\nexport default ProgramNames","import Synthesizer from \"./Synthesizer\"\nimport ProgramNames from \"./ProgramNames\"\nimport { Listener } from \"./MidiMessageHandler\"\n\nfunction render(str: string): Element {\n  const wrapper = document.createElement(\"div\")\n  wrapper.innerHTML = str.replace(/^\\s+/, \"\")\n  return wrapper.firstElementChild!\n}\n\nfunction renderKeys(): string {\n  let html = \"\"\n  for (let i = 0; i < 128; i++) {\n    const n = i % 12\n    const isBlack = [1, 3, 6, 8, 10].includes(n)\n    html += `<div class=\"key ${isBlack ? \"black\" : \"white\"}\"></div>`\n  }\n  return html\n}\n\nfunction renderProgramOptions(programNames: { [index: number]: string[] }, bank: number): string {\n  let html = \"\"\n  const names = programNames[bank]\n  for (let i in names) {\n    const name = names[i]\n    if (name == \"None (None)\") continue;\n    html += `<option value=\"${i}\">${i}: ${name}</option>`\n  }\n  return `<select>${html}</select>`\n}\n\nfunction renderInstrument(program): Element {\n  return render(`\n    <div class=\"instrument\">\n      <div class=\"program\">${program}</div>\n      <div class=\"volume\"></div>\n      <div class=\"panpot\"></div>\n      <div class=\"pitchBend\"></div>\n      <div class=\"pitchBendSensitivity\"></div>\n      <div class=\"keys\">${renderKeys()}</div>\n    </div>\n  `)\n}\n\nfunction objectMap(o, func) {\n  const result = {}\n  Object.keys(o).forEach(key => {\n    result[key] = func(o[key])\n  })\n  return result\n}\n\nfunction programNamesFromBankSet(bankSet) {\n  //return objectMap(bankSet, bank => objectMap(bank, s => s.name))\n  let result = {}\n  Object.keys(bankSet).forEach(no => {\n    result[no] = bankSet[no]\n  })\n  return result\n}\n\nfunction mergeProgramNames(left: { [index: number]: (string | null)[] }, right: { [index: number]: (string | null)[] }) {\n  function mergedKeys(a, b) {\n    return new Set([...Object.keys(a), ...Object.keys(b)])\n  }\n  const banks = mergedKeys(left, right)\n  const result = {}\n  banks.forEach(bank => {\n    const l = left[bank] || []\n    const r = right[bank] || []\n    const list: { [index: number]: string | null } = {}\n    const programs = mergedKeys(l, r)\n    programs.forEach(p => {\n      list[p] = `${l[p] || \"None\"} (${r[p] || \"None\"})`\n    })\n    result[bank] = list\n  })\n  return result\n}\n\nexport default class View implements Listener {\n  private element: Element | null\n  private drag: boolean = false\n\n  draw(synth: Synthesizer): Element {\n    const element = this.element = render(`<div />`)\n    const programNames = mergeProgramNames(programNamesFromBankSet(synth.soundFont.getPresetNames()), ProgramNames)\n\n    for (let i = 0; i < 16; ++i) {\n      const bank = i !== 9 ? 0 : 128\n      const program = renderProgramOptions(programNames, bank)\n      const item = renderInstrument(program)\n\n      const channel = i\n      const select = item.querySelector('select')\n      if (select) {\n        select.addEventListener('change', event => {\n          const target = event.target as HTMLSelectElement\n          const program = parseInt(target.value, 10)\n          this.programChange(channel, program)\n          synth.programChange(channel, program)\n        }, false)\n        select.selectedIndex = synth.channels[i].instrument\n      }\n\n      const notes = item.querySelectorAll(\".key\")\n      for (let j = 0; j < 128; ++j) {\n        const key = j\n\n        notes[j].addEventListener('mousedown', event => {\n          event.preventDefault()\n          this.drag = true\n          this.noteOn(channel, key, 127)\n          synth.noteOn(channel, key, 127)\n\n          const onMouseUp = event => {\n            document.removeEventListener('mouseup', onMouseUp)\n            event.preventDefault()\n            this.drag = false\n            this.noteOff(channel, key, 0)\n            synth.noteOff(channel, key, 0)\n          }\n\n          document.addEventListener('mouseup', onMouseUp)\n        })\n        notes[j].addEventListener('mouseover', event => {\n          event.preventDefault()\n          if (this.drag) {\n            this.noteOn(channel, key, 127)\n            synth.noteOn(channel, key, 127)\n          }\n        })\n        notes[j].addEventListener('mouseout', event => {\n          event.preventDefault()\n          this.noteOff(channel, key, 0)\n          synth.noteOff(channel, key, 0)\n        })\n      }\n\n      element.appendChild(item)\n    }\n\n    return element\n  }\n\n  remove() {\n    if (!this.element) {\n      return\n    }\n\n    this.element.parentNode!.removeChild(this.element)\n    this.element = null\n  }\n\n  private getInstrumentElement(channel: number): Element | null {\n    if (!this.element) {\n      return null\n    }\n    return this.element.querySelectorAll(\".instrument\")[channel]\n  }\n\n  private getKeyElement(channel: number, key: number): Element | null {\n    const elem = this.getInstrumentElement(channel)\n    if (!elem) {\n      return null\n    }\n    return elem.querySelectorAll(\".key\")[key]\n  }\n\n  private findInstrumentElement(channel: number, query: string): Element | null {\n    const elem = this.getInstrumentElement(channel)\n    if (!elem) {\n      return null\n    }\n    return elem.querySelector(query)\n  }\n\n  noteOn(channel: number, key: number, _velocity: number) {\n    const element = this.getKeyElement(channel, key)\n    if (element) {\n      element.classList.add('note-on')\n    }\n  }\n\n  noteOff(channel: number, key: number, _velocity: number) {\n    const element = this.getKeyElement(channel, key)\n    if (element) {\n      element.classList.remove('note-on')\n    }\n  }\n\n  programChange(channel: number, instrument: number) {\n    const select = this.findInstrumentElement(channel, \".program select\") as HTMLSelectElement | undefined\n    if (select) {\n      select.value = `${instrument}`\n    }\n  }\n\n  volumeChange(channel: number, volume: number) {\n    const element = this.findInstrumentElement(channel, \".volume\")\n    if (element) {\n      element.textContent = `${volume}`\n    }\n  }\n\n  panpotChange(channel: number, panpot: number) {\n    const element = this.findInstrumentElement(channel, \".panpot\")\n    if (element) {\n      element.textContent = `${panpot}`\n    }\n  }\n\n  pitchBend(channel: number, pitchBend: number) {\n    const element = this.findInstrumentElement(channel, \".pitchBend\")\n    if (element) {\n      element.textContent = `${pitchBend}`\n    }\n  }\n\n  pitchBendSensitivity(channel: number, sensitivity: number) {\n    const element = this.findInstrumentElement(channel, \".pitchBendSensitivity\")\n    if (element) {\n      element.textContent = `${sensitivity}`\n    }\n  }\n\n  allSoundOff(_channelNumber: number) {\n  }\n\n  setMasterVolume(_volume: number) {\n  }\n\n  resetAllControl(_channelNumber: number) {\n  }\n  init() {\n\n  }\n  expression(_value: number) {\n\n  }\n}\n","import Synthesizer from \"./Synthesizer\"\nexport interface Listener {\n  init()\n  noteOn(channel: number, key: number, velocity: number)\n  noteOff(channel: number, key: number, velocity: number)\n  setMasterVolume(volume: number)\n  programChange(channelNumber: number, instrument: number)\n  volumeChange(channelNumber: number, volume: number)\n  panpotChange(channelNumber: number, panpot: number)\n  pitchBend(channelNumber: number, pitchBend: number)\n  pitchBendSensitivity(channelNumber: number, sensitivity: number)\n  allSoundOff(channelNumber: number)\n  resetAllControl(channelNumber: number)\n  expression(channelNumber: number, expression: number)\n  setPercussionPart(channelNumber: number, sw: boolean)\n  hold(channelNumber: number, sw: boolean)\n  setReverbDepth(channelNumber: number, depth: number)\n  releaseTime(channelNumber: number, value: number)\n  isXG: boolean\n  isGS: boolean\n}\n\nexport default class MidiMessageHandler {\n  private RpnMsb = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  private RpnLsb = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  listener: Listener\n\n  processMidiMessage(message: number[]) {\n    const channel = message[0] & 0x0f\n    const { listener } = this\n\n    if (listener === undefined) {\n      return\n    }\n    switch (message[0] & 0xf0) {\n      case 0x80: // NoteOff: 8n kk vv\n        listener.noteOff(channel, message[1], message[2])\n        break\n      case 0x90: // NoteOn: 9n kk vv\n        if (message[2] > 0) {\n          listener.noteOn(channel, message[1], message[2])\n        } else {\n          listener.noteOff(channel, message[1], 0)\n        }\n        break\n      case 0xB0: // Control Change: Bn cc dd\n        switch (message[1]) {\n          case 0x06: // Data Entry: Bn 06 dd\n            switch (this.RpnMsb[channel]) {\n              case 0:\n                switch (this.RpnLsb[channel]) {\n                  case 0: // Pitch Bend Sensitivity\n                    listener.pitchBendSensitivity(channel, message[2])\n                    break\n                  default:\n                    break\n                }\n                break\n              default:\n                break\n            }\n            break\n          case 0x07: // Volume Change: Bn 07 dd\n            listener.volumeChange(channel, message[2])\n            break\n          case 0x0A: // Panpot Change: Bn 0A dd\n            listener.panpotChange(channel, message[2])\n            break\n          case 0x78: // All Sound Off: Bn 78 00\n            listener.allSoundOff(channel)\n            break\n          case 0x79: // Reset All Control: Bn 79 00\n            listener.resetAllControl(channel)\n            break\n          case 0x20: // BankSelect\n            //console.log(\"bankselect:\", channel, message[2])\n            break\n          case 0x64: // RPN MSB\n            this.RpnMsb[channel] = message[2]\n            break\n          case 0x65: // RPN LSB\n            this.RpnLsb[channel] = message[2]\n            break\n          case 0x40: // Hold\n            listener.hold(channel, message[2] !== 0);\n            break;\n          case 0x0b: // Expression\n            listener.expression(channel, message[2]);\n            break;\n          case 0x47: // Cutoff Fequency (Brightness)\n            // listener.cutOffFrequency[channel] = message[2];\n            break;\n          case 0x48: // DecayTyme\n            // synth.decayTime[channel] = value;\n            break;\n          case 0x49: // ReleaseTime\n            listener.releaseTime(channel, message[2]);\n            break;\n          case 0x4A: // Hermonic Content (Resonance)\n            // listener.harmonicContent[channel] = message[2];\n            break;\n          case 0x5B: // Effect1 Depth（Reverb Send Level）\n            listener.setReverbDepth(channel, message[2]);\n            break;\n          default:\n          // not supported\n        }\n        break\n      case 0xC0: // Program Change: Cn pp\n        listener.programChange(channel, message[1])\n        break\n      case 0xE0: { // Pitch Bend\n        const bend = ((message[1] & 0x7f) | ((message[2] & 0x7f) << 7))\n        listener.pitchBend(channel, bend)\n        break\n      }\n      case 0xf0: // System Exclusive Message\n        // ID number\n        switch (message[1]) {\n          case 0x7e: // non-realtime\n            // GM Reset: F0 7E 7F 09 01 F7\n            if (message[2] === 0x7f && message[3] === 0x09 && message[4] === 0x01) {\n              listener.isXG = false;\n              listener.isGS = false;\n              listener.init();\n            }\n            break;\n          case 0x7f: // realtime\n            // const device = message[2]\n            // sub ID 1\n            switch (message[3]) {\n              case 0x04: // device control\n                // sub ID 2\n                switch (message[4]) {\n                  case 0x01: { // master volume\n                    const volume = message[5] + (message[6] << 7)\n                    const MAX_VOLUME = 0x4000 - 1\n                    listener.setMasterVolume(volume / MAX_VOLUME)\n                    break\n                  }\n                  default:\n                    break\n                }\n                break\n              default:\n                break\n            }\n            break\n          default:\n            break\n        }\n        // Vendor\n        switch (message[2]) {\n          case 0x43: // Yamaha XG\n            if (message[5] === 0x08) {\n              // XG Dram Part: F0 43 [dev] 4C 08 [partNum] 07 [map] F7\n              // but there is no file to use much this parameter...\n              if (message[7] !== 0x00) { // [map]\n                listener.setPercussionPart(message[6], true);\n              } else {\n                listener.setPercussionPart(message[6], false);\n              }\n              //goog.global.console.log(message);\n            }\n            switch (message[7]) {\n              case 0x04:\n                // XG Master Volume: F0 43 [dev] 4C 00 00 04 [value] F7\n                listener.setMasterVolume((message[8] << 7) * 2);\n                //console.log(message[8] << 7);\n                break;\n              case 0x7E:\n                // XG Reset: F0 43 [dev] 4C 00 00 7E 00 F7\n                listener.init();\n                listener.isXG = true;\n                break;\n            }\n            break;\n          case 0x41: // Roland GS / TG300B Mode\n            // TODO\n            switch (message[8]) {\n              case 0x04:\n                // GS Master Volume: F0 41 [dev] 42 12 40 00 04 [value] 58 F7\n                listener.setMasterVolume(message[9] << 7);\n                break;\n              case 0x7F:\n                // GS Reset: F0 41 [dev] 42 12 40 00 7F 00 41 F7\n                listener.init();\n                listener.isGS = true;\n                break;\n              case 0x15:\n                // GS Dram part: F0 41 [dev] 42 12 40 1[part no] [Map] [sum] F7\n                // Notice: [sum] is ignroe in this program.\n                // http://www.ssw.co.jp/dtm/drums/drsetup.htm\n                // http://www.roland.co.jp/support/by_product/sd-20/knowledge_base/1826700/\n\n                var part = message[7] - 0x0F;\n                var map = message[8];\n                if (part === 0) {\n                  // 10 Ch.\n                  if (map !== 0x00) {\n                    listener.setPercussionPart(9, true);\n                  } else {\n                    listener.setPercussionPart(9, false);\n                  }\n                } else if (part >= 10) {\n                  // 1~9 Ch.\n                  if (map !== 0x00) {\n                    listener.setPercussionPart(part - 1, true);\n                  } else {\n                    listener.setPercussionPart(part - 1, false);\n                  }\n                } else {\n                  // 11~16 Ch.\n                  if (map !== 0x00) {\n                    listener.setPercussionPart(part, true);\n                  } else {\n                    listener.setPercussionPart(part, false);\n                  }\n                }\n                break\n            }\n            break\n        }\n        break\n      default: // not supported\n        break\n    }\n  }\n}\n","// delegates method calls to multiple targets\nexport default function delegateProxy<T extends Object>(targets: T[]) {\n  return new Proxy(targets[0], {\n    get(target, propKey, _receiver) {\n      return () => {\n        targets\n          .map(t => t[propKey].bind(target))\n          .forEach(f => f(...arguments))\n      }\n    }\n  })\n}\n","import Synthesizer from \"./Synthesizer\"\nimport View from \"./View\"\nimport MidiMessageHandler, { Listener } from \"./MidiMessageHandler\"\nimport delegateProxy from \"./delegateProxy\"\n\nexport default class WebMidiLink {\n  loadCallback: (ArrayBuffer) => void\n  midiMessageHandler: MidiMessageHandler\n  ready: boolean = false\n  synth: Synthesizer\n  view: View\n  target: Element | null\n  wml: Window | null\n\n  constructor(target = \".synth\") {\n    this.midiMessageHandler = new MidiMessageHandler()\n    this.target = document.body.querySelector(target);\n    if (!this.target) {\n      throw \"Target DOM is not found.\";\n    }\n    if (window.opener) {\n      this.wml = window.opener;\n    } else if (window.parent !== window) {\n      this.wml = window.parent;\n    } else {\n      this.wml = null;\n    }\n\n\n    window.addEventListener('DOMContentLoaded', function () {\n      this.ready = true\n    }.bind(this), false)\n  }\n\n  setup(url) {\n    if (!this.ready) {\n      window.addEventListener('DOMContentLoaded', function onload() {\n        window.removeEventListener('DOMContentLoaded', onload, false)\n        this.load(url)\n      }.bind(this), false)\n    } else {\n      this.load(url)\n    }\n  }\n\n  load(url) {\n    const xhr = new XMLHttpRequest()\n    const progress = this.target!.appendChild(document.createElement('progress'));\n    const percentage = progress.parentNode!.insertBefore(document.createElement('outpout'), progress.nextElementSibling);\n\n    xhr.open('GET', url, true)\n    xhr.responseType = 'arraybuffer'\n\n    xhr.addEventListener('load', function (ev) {\n      const xhr = ev.target as XMLHttpRequest\n\n      this.onload(xhr.response)\n      this.target!.removeChild(progress);\n      this.target!.removeChild(percentage);\n      if (typeof this.loadCallback === 'function') {\n        this.loadCallback(xhr.response)\n      }\n    }.bind(this), false)\n\n    xhr.addEventListener('progress', function (e) {\n      progress.max = e.total;\n      progress.value = e.loaded;\n      percentage.innerText = (e.loaded / e.total) / 100 + ' %';\n      // NOTE: This message is not compliant of WebMidiLink.\n      if (this.wml) this.wml.postMessage('link,progress,' + e.loaded + ',' + e.total, '*');\n    }.bind(this), false)\n    xhr.send()\n  }\n\n  onload(response: ArrayBuffer) {\n    const input = new Uint8Array(response)\n    this.loadSoundFont(input)\n  }\n\n  loadSoundFont(input: Uint8Array) {\n    let synth: Synthesizer\n\n    if (!this.synth) {\n      const ctx = new AudioContext()\n      synth = this.synth = new Synthesizer(ctx)\n      synth.connect(ctx.destination)\n      synth.loadSoundFont(input)\n      const view = this.view = new View()\n      this.target!.appendChild(view.draw(synth))\n      this.midiMessageHandler.listener = delegateProxy<Listener>([synth, view])\n      window.addEventListener('message', this.onmessage.bind(this), false)\n    } else {\n      synth = this.synth\n      synth.loadSoundFont(input)\n    }\n\n    // link ready\n    if (this.wml) this.wml.postMessage(\"link,ready\", '*')\n  }\n\n  onmessage(ev: MessageEvent) {\n    const msg = ev.data.split(',')\n    const type = msg.shift()\n\n    switch (type) {\n      case 'midi':\n        this.midiMessageHandler.processMidiMessage(\n          msg.map(function (hex) {\n            return parseInt(hex, 16)\n          })\n        )\n        break\n      case 'link':\n        const command = msg.shift()\n        switch (command) {\n          case 'reqpatch':\n            // TODO: dummy data\n            if (this.wml) this.wml.postMessage(\"link,patch\", '*')\n            break\n          case 'setpatch':\n            // TODO: NOP\n            break\n          default:\n            console.error('unknown link message:', command)\n            break\n        }\n        break\n      default:\n        console.error('unknown message type')\n    }\n  }\n\n  setLoadCallback(callback: (ArrayBuffer) => void) {\n    this.loadCallback = callback\n  }\n}\n"],"names":["parseChunk"],"mappings":"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"}